# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-03-26 20:44
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gwells', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccreditedCertificate',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('acccert_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='AccreditedCertificate UUID, hidden from users')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expired_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'registries_accredited_certficate',
                'verbose_name_plural': 'Accredited Certificate',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityCode',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('registries_activity_code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('display_order', models.PositiveIntegerField()),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'registries_activity_code',
                'verbose_name_plural': 'Possible types of restricted activity, related ',
                'ordering': ['display_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationStatusCode',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('registries_application_status_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('display_order', models.PositiveIntegerField()),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'registries_application_status_code',
                'verbose_name_plural': 'Possible statuses of Applications',
                'ordering': ['display_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='CertifyingBody',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('certbody_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='CertifyingBody UUID, hidden from users')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expired_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'registries_certbody',
                'verbose_name_plural': 'Certifying Body',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassificationAppliedFor',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('classification_applied_for_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID of the Registries Classification being applied for, hidden from users')),
                ('primary_certificate_no', models.CharField(max_length=50)),
                ('primary_certificate', models.ForeignKey(db_column='certbody_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registries.CertifyingBody', verbose_name='Primary Certificate')),
            ],
            options={
                'db_table': 'registries_classification_applied_for',
                'verbose_name_plural': 'Registries Classification being applied for',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('org_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Organization UUID, hidden from users')),
                ('name', models.CharField(max_length=200)),
                ('street_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street Address')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Town/City')),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Postal Code')),
                ('main_tel', models.CharField(blank=True, max_length=15, null=True, verbose_name='Company main telephone number')),
                ('fax_tel', models.CharField(blank=True, max_length=15, null=True, verbose_name='Facsimile telephone number')),
                ('website_url', models.URLField(blank=True, null=True, verbose_name="Orgnization's Website")),
                ('province_state', models.ForeignKey(db_column='province_state_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceStateCode', verbose_name='Province/State')),
            ],
            options={
                'db_table': 'registries_organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('person_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Person UUID, hidden from users')),
                ('first_name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('organization', models.ForeignKey(db_column='org_guid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='registries.Organization', verbose_name='Organization Reference')),
            ],
            options={
                'db_table': 'registries_person',
                'verbose_name_plural': 'Persons',
                'ordering': ['first_name', 'surname'],
            },
        ),
        migrations.CreateModel(
            name='PersonContact',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('per_contact_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Person Contact UUID, hidden from users')),
                ('contact_tel', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contact telephone number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email adddress')),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expired_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('person', models.ForeignKey(db_column='person_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registries.Person', verbose_name='Person Reference')),
            ],
            options={
                'db_table': 'registries_per_contact',
                'verbose_name_plural': 'Contact details for a given Person',
            },
        ),
        migrations.CreateModel(
            name='QualificationCode',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('registries_qualification_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('display_order', models.PositiveIntegerField()),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'registries_qualification_code',
                'verbose_name_plural': 'Possible qualifications, under a given ',
                'ordering': ['display_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('register_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Register UUID, hidden from users')),
                ('registration_no', models.CharField(blank=True, max_length=15, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('register_removal_date', models.DateField(blank=True, null=True, verbose_name='Date of Removal from Register')),
                ('person', models.ForeignKey(db_column='person_guid', on_delete=django.db.models.deletion.CASCADE, to='registries.Person', verbose_name='Person Reference')),
            ],
            options={
                'db_table': 'registries_register',
                'verbose_name_plural': 'Register of Drillers and Pump Installers',
            },
        ),
        migrations.CreateModel(
            name='RegistriesApplication',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('application_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Register Application UUID, hidden from users')),
                ('file_no', models.CharField(blank=True, max_length=25, null=True, verbose_name='ORCS File # reference.')),
                ('over19_ind', models.BooleanField(default=True)),
                ('registrar_notes', models.CharField(blank=True, max_length=255, null=True, verbose_name='Registrar Notes, for internal use only.')),
                ('reason_denied', models.CharField(blank=True, max_length=255, null=True, verbose_name='Free form text explaining reason for denial.')),
                ('person', models.ForeignKey(db_column='person_guid', on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='registries.Person', verbose_name='Person Reference')),
            ],
            options={
                'db_table': 'registries_application',
                'verbose_name_plural': 'Applications for Driller or Pump Installer',
            },
        ),
        migrations.CreateModel(
            name='RegistriesApplicationStatus',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('application_status_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Register Application Status UUID, hidden from users')),
                ('notified_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expired_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('application', models.ForeignKey(db_column='application_guid', on_delete=django.db.models.deletion.CASCADE, to='registries.RegistriesApplication', verbose_name='Application Reference')),
                ('status', models.ForeignKey(db_column='registries_application_status_guid', on_delete=django.db.models.deletion.CASCADE, to='registries.ApplicationStatusCode', verbose_name='Application Status Code Reference')),
            ],
            options={
                'db_table': 'registries_application_status',
                'verbose_name_plural': 'Status for a given Application',
                'ordering': ['application', 'effective_date'],
            },
        ),
        migrations.CreateModel(
            name='RegistriesRemovalReason',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('registries_removal_reason_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('display_order', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'registries_removal_reason_code',
                'verbose_name_plural': 'Possible reasons for removal from either of ',
                'ordering': ['display_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='RegistriesStatusCode',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('registries_status_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('display_order', models.PositiveIntegerField()),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'registries_status_code',
                'verbose_name_plural': 'Possible Status Codes of Register Entries',
                'ordering': ['display_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='SubactivityCode',
            fields=[
                ('create_user', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(max_length=30, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('registries_subactivity_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('display_order', models.PositiveIntegerField()),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('registries_activity', models.ForeignKey(blank=True, db_column='registries_activity_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registries.ActivityCode')),
            ],
            options={
                'db_table': 'registries_subactivity_code',
                'verbose_name_plural': 'Possible subtypes of restricted activity, ',
                'ordering': ['display_order', 'description'],
            },
        ),
        migrations.AddField(
            model_name='register',
            name='register_removal_reason',
            field=models.ForeignKey(blank=True, db_column='registries_removal_reason_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registries.RegistriesRemovalReason', verbose_name='Removal Reason'),
        ),
        migrations.AddField(
            model_name='register',
            name='registries_activity',
            field=models.ForeignKey(db_column='registries_activity_guid', on_delete=django.db.models.deletion.CASCADE, to='registries.ActivityCode'),
        ),
        migrations.AddField(
            model_name='register',
            name='status',
            field=models.ForeignKey(db_column='registries_status_guid', on_delete=django.db.models.deletion.CASCADE, to='registries.RegistriesStatusCode', verbose_name='Register Entry Status'),
        ),
        migrations.AddField(
            model_name='qualificationcode',
            name='registries_subactivity',
            field=models.ForeignKey(blank=True, db_column='registries_subactivity_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registries.SubactivityCode'),
        ),
        migrations.AddField(
            model_name='classificationappliedfor',
            name='registries_application',
            field=models.ForeignKey(db_column='application_guid', on_delete=django.db.models.deletion.CASCADE, to='registries.RegistriesApplication', verbose_name='Application Reference'),
        ),
        migrations.AddField(
            model_name='classificationappliedfor',
            name='registries_subactivity',
            field=models.ForeignKey(db_column='registries_subactivity_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registries.SubactivityCode'),
        ),
        migrations.AddField(
            model_name='accreditedcertificate',
            name='acccert_activity',
            field=models.ForeignKey(db_column='registries_activity_code', on_delete=django.db.models.deletion.CASCADE, to='registries.ActivityCode', verbose_name='Activity Type'),
        ),
    ]
