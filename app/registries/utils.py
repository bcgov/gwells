"""
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""


def generate_history_diff(collection, identifier=None):
    """
    Returns a list of revisions for a record, showing fields that changed in each revision.
    Function takes a list of objects generated by Version.field_dict (see django-reversion package)

    format:
        [{
            diff: {},
            prev: {},
            user: string,
            date: date
        }]

    """
    history_diff = []

    for i in range(len(collection)):
        changed = False
        cur = collection[i]
        prev = None

        if i < (len(collection) - 1):
            prev = collection[i+1]

        item = {
            "diff": {},
            "prev": {},
            "user": cur['update_user'] or cur['create_user'],
            "date": cur['update_date'] or cur['create_date']
        }

        if identifier:
            item["name"] = identifier

        # Check if revision is the first one (initial version of record)
        if prev is None:
            item['created'] = True
            history_diff.append(item)

        else:
            for key, value in prev.items():
                # loop through the previous record and add changed fields to the 'diff' dict
                # leave out update/create stamps
                if (cur[key] != value and
                        key != "update_date" and
                        key != "update_user" and
                        key != "create_date" and
                        key != "create_user"):
                    item['diff'][key] = cur[key]
                    item['prev'][key] = value
                    changed = True
            if changed:
                history_diff.append(item)

    return history_diff
