# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-08-07 17:58
from __future__ import unicode_literals

from django.db import migrations
from django.core.management.sql import emit_post_migrate_signal


AQUIFERS_VIEWER = 'aquifers_view'
AQUIFERS_EDIT = 'aquifers_edit'

KEYCLOAK_ROLE = [AQUIFERS_EDIT, AQUIFERS_VIEWER]


def revert_groups(apps, schema_editor):
    # We leave everything as is!
    pass


def update_groups(apps, schema_editor):
    # Prior to loading permissions, we need to ensure that the post_migrate has run. There is a post_migrate
    # task that populates ther required permissions.
    db_alias = schema_editor.connection.alias
    emit_post_migrate_signal(2, False, 'default')

    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    # Default permissions for aquifers
    AQUIFERS_EDIT_PERMISSIONS = [x for x in
                                 Permission.objects.filter(codename__in=['add_aquifer',
                                                                         'change_aquifer',
                                                                         'delete_aquifer',
                                                                         'add_aquiferdemand',
                                                                         'change_aquiferdemand',
                                                                         'delete_aquiferdemand',
                                                                         'add_aquifermaterial',
                                                                         'change_aquifermaterial',
                                                                         'delete_aquifermaterial',
                                                                         'add_aquiferproductivity',
                                                                         'change_aquiferproductivity',
                                                                         'delete_aquiferproductivity',
                                                                         'add_aquifersubtype',
                                                                         'change_aquifersubtype',
                                                                         'delete_aquifersubtype',
                                                                         'add_aquifervulnerabilitycode',
                                                                         'change_aquifervulnerabilitycode',
                                                                         'delete_aquifervulnerabilitycode',
                                                                         'add_qualityconcern',
                                                                         'change_qualityconcern',
                                                                         'delete_qualityconcern',
                                                                         'add_wateruse',
                                                                         'change_wateruse',
                                                                         'delete_wateruse',
                                                                         ])
                                 ]

    # Create the role->permission lookup that we're going to iterate through and re-produce in Django.
    ROLE_PERMISSION_MAP = {
        AQUIFERS_VIEWER: [],
        AQUIFERS_EDIT: AQUIFERS_EDIT_PERMISSIONS
    }

    # We create a group corresponding to each keycloak role
    for role in KEYCLOAK_ROLE:
        group, created = Group.objects.get_or_create(name=role)
        group.permissions.set(ROLE_PERMISSION_MAP.get(role))

    admin_group = Group.objects.get(name='gwells_admin')
    admin_group.permissions.add(*AQUIFERS_EDIT_PERMISSIONS)


class Migration(migrations.Migration):

    dependencies = [
        ('gwells', '0008_auto_20180807_1758'),
    ]

    operations = [
        migrations.RunPython(update_groups, revert_groups),
    ]
