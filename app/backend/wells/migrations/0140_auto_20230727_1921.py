# Generated by Django 2.2.28 on 2023-07-27 19:21

from django.db import migrations, models

DROP_EXPORT_AQUIFER_PARAMETERS_VIEW_V1_SQL = """
DROP VIEW IF EXISTS export_aquifer_parameters_v1_view;
"""

CREATE_EXPORT_AQUIFER_PARAMETERS_VIEW_V1_SQL = """
CREATE OR REPLACE view export_aquifer_parameters_v1_view as
SELECT
  ap.well_tag_number,
  ap.testing_number,
  ap.start_date_pumping_test,
  tt.description AS pumping_test_description,
  ap.test_duration,
  be.description AS boundary_effect,
  ap.storativity,
  ap.transmissivity,
  ap.hydraulic_conductivity,
  ap.specific_yield,
  ap.specific_capacity,
  am.description AS analysis_method,
  ap.comments
FROM
  aquifer_parameters AS ap
LEFT JOIN
  pumping_test_description_code AS tt ON ap.pumping_test_description_code = tt.pumping_test_description_code
LEFT JOIN
  boundary_effect_code AS be ON ap.boundary_effect_code = be.boundary_effect_code
LEFT JOIN
  analysis_method_code AS am ON ap.analysis_method_code = am.analysis_method_code
INNER JOIN
  well ON ap.well_tag_number = well.well_tag_number
WHERE
  well.well_publication_status_code = 'Published' OR well.well_publication_status_code IS NULL
ORDER BY
  ap.testing_number;
"""


def convert_hydraulic_conductivity(apps, schema_editor):
    AquiferParameters = apps.get_model('wells', 'AquiferParameters')
    for ap in AquiferParameters.objects.all():
        try:
            ap.hydraulic_conductivity = float(ap.hydraulic_conductivity)
            ap.save()
        except (ValueError, TypeError):
            ap.hydraulic_conductivity = None  # set value to None if conversion to float fails
            ap.save()


class Migration(migrations.Migration):

    dependencies = [
        ('wells', '0139_add_aquifer_parameters'),
    ]

    operations = [
        migrations.RunPython(convert_hydraulic_conductivity),
        migrations.RunSQL(
          DROP_EXPORT_AQUIFER_PARAMETERS_VIEW_V1_SQL
        ),
        migrations.AlterField(
            model_name='aquiferparameters',
            name='hydraulic_conductivity',
            field=models.DecimalField(blank=True, decimal_places=10, max_digits=30, null=True, verbose_name='Hydraulic Conductivity'),
        ),
        migrations.RunSQL(
          CREATE_EXPORT_AQUIFER_PARAMETERS_VIEW_V1_SQL
        ),
    ]
