# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-09-24 19:56
from __future__ import unicode_literals

from django.db import migrations, DataError


def change_code_description(apps, schema_editor):
    CasingCode = apps.get_model('wells', 'CasingCode')
    CasingMaterialCode = apps.get_model('wells', 'CasingMaterialCode')
    Casing = apps.get_model('wells', 'Casing')

    casing_code = CasingCode(code='STL_REM', description='Steel Removed', display_order=3)
    casing_code.save()

    casing_material = CasingMaterialCode.objects.filter(code='STL_PUL_OT').first()

    if casing_material:
        for casing in Casing.objects.filter(casing_material=casing_material):
            # Any case where we are overwriting a different casing_code can be ignored, as casing material 
            # is an entirely new field, and this migration should thus only find records in test/dev.
            casing.casing_code = casing_code
            casing.casing_material = None
            casing.save()

        casing_material.delete()


def restore_code_description(apps, schema_editor):
    CasingCode = apps.get_model('wells', 'CasingCode')
    CasingMaterialCode = apps.get_model('wells', 'CasingMaterialCode')
    Casing = apps.get_model('wells', 'Casing')

    casing_code = CasingCode.objects.get(code='STL_REM')

    casing_material = CasingMaterialCode(code='STL_PUL_OT', description='Steel pulled out', display_order=20)
    casing_material.save()

    for casing in Casing.objects.filter(casing_code=casing_code):
        if casing.casing_material:
            raise DataError('Was not expecting to find casing code: {}'.format(casing.casing_code))
        casing.casing_material = casing_material
        casing.casing_code = None
        casing.save()

    casing_code.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('wells', '0021_delete_aquifervulnerabilitycode'),
    ]

    operations = [
        migrations.RunPython(change_code_description, reverse_code=restore_code_description),
    ]
