# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-06-19 23:15
from __future__ import unicode_literals
import logging

from django.db import migrations
from django.core.exceptions import ObjectDoesNotExist


logger = logging.getLogger('registries.migrations')


def update_application_status(apps, schema_editor):
    ApplicationStatusCode = apps.get_model('registries', 'ApplicationStatusCode')
    try:
        code = ApplicationStatusCode.objects.get(code='A')
        code.description = 'Registered'
        code.save()
    except ObjectDoesNotExist as e:
        # On an empty database, this records may not exist (it will be loaded with fixtures)
        # No-one cares anymore (all production data has been migrated) so we don't even
        # bother logging it.
        pass


def revert(apps, schema_editor):
    ApplicationStatusCode = apps.get_model('registries', 'ApplicationStatusCode')
    try:
        code = ApplicationStatusCode.objects.get(code='A')
        code.description = 'Approved'
        code.save()
    except ObjectDoesNotExist as e:
        # On an empty database, this records may not exist (it will be loaded with fixtures)
        logger.debug('ApplicationStatusCode with code \'A\' not found.'
                     'This is expected on an empty database.')


class Migration(migrations.Migration):

    dependencies = [
        ('registries', '0010_auto_20180618_2119'),
    ]

    operations = [
        migrations.RunPython(update_application_status, revert)
    ]
