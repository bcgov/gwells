# Generated by Django 2.2.28 on 2023-04-09 03:54

import django.contrib.gis.db.models.fields
from django.contrib.gis.geos import GEOSGeometry
from django.db import migrations, models
from registries.models import RegionalArea
import django.utils.timezone
import gwells.db_comments.model_mixins
import zipfile
import uuid
import json
import os


def import_regional_areas(apps, schema_editor):
    # Extract the GeoJSON file from the ZIP archive
    with zipfile.ZipFile(os.path.join(os.path.dirname(__file__), '../fixtures/regional_areas.zip'), 'r') as zip_file:
        geojson_filename = zip_file.namelist()[0]  # Assumes there is only one file in the archive
        with zip_file.open(geojson_filename, 'r') as f:
            geojson_data = json.load(f)

    for feature in geojson_data['features']:
        name = feature['properties']['ADMIN_AREA_NAME']
        geom = GEOSGeometry(json.dumps(feature['geometry']), srid=4326)
        RegionalArea.objects.create(
            name=name, 
            geom=geom,
            create_user='DATALOAD_USER',
            update_user='DATALOAD_USER')


def reverse_import_regional_areas(apps, schema_editor):
    RegionalArea.objects.all().delete()


CREATE_REGISTRIES_REGIONAL_AREAS_VIEW_SQL = """
    CREATE VIEW postgis_ftw.registries_regional_areas_view AS
        SELECT
            name,
            geom,
            regional_area_guid
        FROM regional_area
        WHERE geom IS NOT NULL;
        GRANT SELECT ON postgis_ftw.registries_regional_areas_view TO ftw_reader;
"""


REVERSE_REGISTRIES_REGIONAL_AREAS_VIEW_SQL = """
    DROP VIEW IF EXISTS postgis_ftw.registries_regional_areas_view;
"""


class Migration(migrations.Migration):

    dependencies = [
        ('registries', '0006_organization_geom'),
    ]

    operations = [
        migrations.CreateModel(
            name='RegionalArea',
            fields=[
                ('create_user', models.CharField(max_length=60)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_user', models.CharField(max_length=60)),
                ('update_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('regional_area_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Regional Area UUID')),
                ('name', models.CharField(max_length=200)),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Regional Areas',
                'db_table': 'regional_area',
                'ordering': ['name'],
            },
            bases=(models.Model, gwells.db_comments.model_mixins.DBComments),
        ),
        migrations.RunPython(import_regional_areas, reverse_import_regional_areas),
        migrations.RunSQL(
          CREATE_REGISTRIES_REGIONAL_AREAS_VIEW_SQL,
          REVERSE_REGISTRIES_REGIONAL_AREAS_VIEW_SQL
        )
    ]
