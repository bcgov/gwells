# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2018-01-29 04:34
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gwells', '0073_auto_20180108_2024'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivitySubtype',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('registry_activity_subtype_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Subtype of restricted activity, under a given Activity Type',
                'db_table': 'registry_activity_subtype',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('registry_activity_type_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Type of restricted activity',
                'db_table': 'registry_activity_type',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationStatusCode',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('registry_application_status_code_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Status of Applications',
                'db_table': 'registry_application_status_code',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='ClassificationAppliedFor',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('classification_applied_for_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID of the Registry Classification being applied for, hidden from users')),
                ('primary_certificate_no', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Registry Classification being applied for',
                'db_table': 'registry_classification_applied_for',
            },
        ),
        migrations.CreateModel(
            name='ContactAt',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('contact_at_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Contact At UUID, hidden from users')),
                ('tel', models.CharField(blank=True, max_length=12, null=True, verbose_name='Contact telephone number')),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email adddress')),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expired_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
            ],
            options={
                'verbose_name_plural': 'Person contact details for a given Company',
                'db_table': 'registry_contact_at',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('org_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Organization UUID, hidden from users')),
                ('name', models.CharField(max_length=200)),
                ('street_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street Address')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Town/City')),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Postal Code')),
                ('main_tel', models.CharField(blank=True, max_length=12, null=True, verbose_name='Company main telephone number')),
                ('fax_tel', models.CharField(blank=True, max_length=12, null=True, verbose_name='Facsimile telephone number')),
                ('website_url', models.URLField(blank=True, null=True, verbose_name="Orgnization's Website")),
                ('certificate_authority', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Certifying Authority for Registry Activities')),
                ('province_state', models.ForeignKey(db_column='province_state_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceState', verbose_name='Province/State')),
            ],
            options={
                'verbose_name_plural': 'Organizations',
                'db_table': 'registry_organization',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('person_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Person UUID, hidden from users')),
                ('first_name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Persons',
                'db_table': 'registry_person',
                'ordering': ['first_name', 'surname'],
            },
        ),
        migrations.CreateModel(
            name='QualificationType',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('registry_qualification_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField()),
                ('registry_activity_subtype', models.ForeignKey(blank=True, db_column='registry_activity_subtype_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registry.ActivitySubtype')),
            ],
            options={
                'verbose_name_plural': 'Qualification under a given Activity Type and Subtype',
                'db_table': 'registry_qualification',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='Registry',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('registry_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Registry UUID, hidden from users')),
                ('registration_no', models.CharField(blank=True, max_length=15, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('registration_removal_date', models.DateField(blank=True, null=True)),
                ('registry_activity_type', models.ForeignKey(blank=True, db_column='registry_activity_type_guid', on_delete=django.db.models.deletion.CASCADE, to='registry.ActivityType')),
            ],
            options={
                'verbose_name_plural': 'Registration of Drillers and Pump Installers',
                'db_table': 'registry',
            },
        ),
        migrations.CreateModel(
            name='RegistryApplication',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('application_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Registry Application UUID, hidden from users')),
                ('file_no', models.CharField(blank=True, max_length=25, null=True, verbose_name='ORCS File # reference.')),
                ('over19_ind', models.BooleanField(default=True)),
                ('registrar_notes', models.CharField(blank=True, max_length=255, null=True, verbose_name='Registrar Notes, for internal use only.')),
                ('reason_denied', models.CharField(blank=True, max_length=255, null=True, verbose_name='Free form text explaining reason for denial.')),
                ('person', models.ForeignKey(db_column='person_guid', on_delete=django.db.models.deletion.CASCADE, to='registry.Person', verbose_name='Person Reference')),
            ],
            options={
                'verbose_name_plural': 'Applications for Driller or Pump Installer',
                'db_table': 'registry_application',
            },
        ),
        migrations.CreateModel(
            name='RegistryApplicationStatus',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('application_status_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Registry Application Status UUID, hidden from users')),
                ('notified_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('effective_date', models.DateField(default=datetime.date.today)),
                ('expired_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('application', models.ForeignKey(db_column='application_guid', on_delete=django.db.models.deletion.CASCADE, to='registry.RegistryApplication', verbose_name='Application Reference')),
            ],
            options={
                'verbose_name_plural': 'Status for a given Application',
                'db_table': 'registry_application_status',
                'ordering': ['application', 'effective_date'],
            },
        ),
        migrations.CreateModel(
            name='RegistryStatusCode',
            fields=[
                ('who_created', models.CharField(max_length=30)),
                ('when_created', models.DateTimeField(blank=True, null=True)),
                ('who_updated', models.CharField(max_length=30, null=True)),
                ('when_updated', models.DateTimeField(blank=True, null=True)),
                ('registry_status_code_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Status Code of Registry Entries',
                'db_table': 'registry_status_code',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.AddField(
            model_name='registryapplicationstatus',
            name='status',
            field=models.ForeignKey(db_column='registry_status_code_guid', on_delete=django.db.models.deletion.CASCADE, to='registry.RegistryStatusCode', verbose_name='Status Code Reference'),
        ),
        migrations.AddField(
            model_name='registry',
            name='registry_application',
            field=models.ForeignKey(blank=True, db_column='application_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registry.RegistryApplication', verbose_name='Application Reference'),
        ),
        migrations.AddField(
            model_name='registry',
            name='registry_status',
            field=models.ForeignKey(db_column='registry_status_code_guid', on_delete=django.db.models.deletion.CASCADE, to='registry.RegistryStatusCode', verbose_name='Registration Entry Status'),
        ),
        migrations.AddField(
            model_name='contactat',
            name='org',
            field=models.ForeignKey(blank=True, db_column='org_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registry.Organization', verbose_name='Company Reference'),
        ),
        migrations.AddField(
            model_name='contactat',
            name='person',
            field=models.ForeignKey(blank=True, db_column='person_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registry.Person', verbose_name='Person Reference'),
        ),
        migrations.AddField(
            model_name='classificationappliedfor',
            name='primary_certificate_authority',
            field=models.ForeignKey(db_column='org_guid', on_delete=django.db.models.deletion.CASCADE, to='registry.Organization', verbose_name='Certifying Organization'),
        ),
        migrations.AddField(
            model_name='classificationappliedfor',
            name='registry_activity_subtype',
            field=models.ForeignKey(db_column='registry_activity_subtype_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registry.ActivitySubtype'),
        ),
        migrations.AddField(
            model_name='classificationappliedfor',
            name='registry_application',
            field=models.ForeignKey(db_column='application_guid', on_delete=django.db.models.deletion.CASCADE, to='registry.RegistryApplication', verbose_name='Application Reference'),
        ),
        migrations.AddField(
            model_name='activitysubtype',
            name='registry_activity_type',
            field=models.ForeignKey(blank=True, db_column='registry_activity_type_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='registry.ActivityType'),
        ),
    ]
