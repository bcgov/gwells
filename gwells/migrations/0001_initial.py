# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-02 18:27
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivitySubmission',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('filing_number', models.AutoField(primary_key=True, serialize=False)),
                ('activity_submission_guid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('driller_name', models.CharField(blank=True, max_length=200, verbose_name='Name of Person Who Did the Work')),
                ('consultant_name', models.CharField(blank=True, max_length=200, verbose_name='Consultant Name')),
                ('consultant_company', models.CharField(blank=True, max_length=200, verbose_name='Consultant Company')),
                ('work_start_date', models.DateField(verbose_name='Work Start Date')),
                ('work_end_date', models.DateField(verbose_name='Work End Date')),
                ('owner_full_name', models.CharField(max_length=200, verbose_name='Owner Name')),
                ('owner_mailing_address', models.CharField(max_length=100, verbose_name='Mailing Address')),
                ('owner_city', models.CharField(max_length=100, verbose_name='Town/City')),
                ('owner_postal_code', models.CharField(blank=True, max_length=10, verbose_name='Postal Code')),
                ('street_address', models.CharField(blank=True, max_length=100, verbose_name='Street Address')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='Town/City')),
                ('legal_lot', models.CharField(blank=True, max_length=10, verbose_name='Lot')),
                ('legal_plan', models.CharField(blank=True, max_length=20, verbose_name='Plan')),
                ('legal_district_lot', models.CharField(blank=True, max_length=20, verbose_name='District Lot')),
                ('legal_block', models.CharField(blank=True, max_length=10, verbose_name='Block')),
                ('legal_section', models.CharField(blank=True, max_length=10, verbose_name='Section')),
                ('legal_township', models.CharField(blank=True, max_length=20, verbose_name='Township')),
                ('legal_range', models.CharField(blank=True, max_length=10, verbose_name='Range')),
                ('legal_pid', models.PositiveIntegerField(blank=True, null=True, verbose_name='PID')),
                ('well_location_description', models.CharField(blank=True, max_length=500, verbose_name='Well Location Description')),
                ('identification_plate_number', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('diameter', models.CharField(blank=True, max_length=9)),
                ('total_depth_drilled', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('finished_well_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('well_yield', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
            ],
            options={
                'db_table': 'gwells_activity_submission',
            },
        ),
        migrations.CreateModel(
            name='Driller',
            fields=[
                ('driller_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'gwells_driller',
            },
        ),
        migrations.CreateModel(
            name='DrillingCompany',
            fields=[
                ('drilling_company_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('is_hidden', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Drilling Companies',
                'db_table': 'gwells_drilling_company',
            },
        ),
        migrations.CreateModel(
            name='IntendedWaterUse',
            fields=[
                ('intended_water_use_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'gwells_intended_water_use',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='LandDistrict',
            fields=[
                ('land_district_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=255)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'gwells_land_district',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LtsaOwner',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('lsts_owner_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=200, verbose_name='Owner Name')),
                ('mailing_address', models.CharField(max_length=100, verbose_name='Mailing Address')),
                ('city', models.CharField(max_length=100, verbose_name='Town/City')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Postal Code')),
            ],
            options={
                'db_table': 'gwells_ltsa_owner',
            },
        ),
        migrations.CreateModel(
            name='ProvinceState',
            fields=[
                ('province_state_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'gwells_province_state',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='Well',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('well_tag_number', models.AutoField(primary_key=True, serialize=False)),
                ('well_guid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('owner_full_name', models.CharField(max_length=200, verbose_name='Owner Name')),
                ('owner_mailing_address', models.CharField(max_length=100, verbose_name='Mailing Address')),
                ('owner_city', models.CharField(max_length=100, verbose_name='Town/City')),
                ('owner_postal_code', models.CharField(blank=True, max_length=10, verbose_name='Postal Code')),
                ('street_address', models.CharField(blank=True, max_length=100, verbose_name='Street Address')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='Town/City')),
                ('legal_lot', models.CharField(blank=True, max_length=10, verbose_name='Lot')),
                ('legal_plan', models.CharField(blank=True, max_length=20, verbose_name='Plan')),
                ('legal_district_lot', models.CharField(blank=True, max_length=20, verbose_name='District Lot')),
                ('legal_block', models.CharField(blank=True, max_length=10, verbose_name='Block')),
                ('legal_section', models.CharField(blank=True, max_length=10, verbose_name='Section')),
                ('legal_township', models.CharField(blank=True, max_length=20, verbose_name='Township')),
                ('legal_range', models.CharField(blank=True, max_length=10, verbose_name='Range')),
                ('legal_pid', models.PositiveIntegerField(blank=True, null=True, verbose_name='PID')),
                ('well_location_description', models.CharField(blank=True, max_length=500, verbose_name='Well Location Description')),
                ('identification_plate_number', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('diameter', models.CharField(blank=True, max_length=9)),
                ('total_depth_drilled', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('finished_well_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('well_yield', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('intended_water_use', models.ForeignKey(blank=True, db_column='intended_water_use_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.IntendedWaterUse', verbose_name='Water Supply Well Intended Water Use')),
                ('legal_land_district', models.ForeignKey(blank=True, db_column='legal_land_district_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.LandDistrict', verbose_name='Land District')),
                ('owner_province_state', models.ForeignKey(blank=True, db_column='province_state_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceState', verbose_name='Province')),
            ],
            options={
                'db_table': 'gwells_well',
            },
        ),
        migrations.CreateModel(
            name='WellActivityType',
            fields=[
                ('well_activity_type_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'gwells_well_activity_type',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='WellClass',
            fields=[
                ('well_class_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'gwells_well_class',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='WellSubclass',
            fields=[
                ('well_subclass_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('is_hidden', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField()),
                ('well_class', models.ForeignKey(blank=True, db_column='well_class_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.WellClass')),
            ],
            options={
                'db_table': 'gwells_well_subclass',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.CreateModel(
            name='WellYieldUnit',
            fields=[
                ('well_yield_unit_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=100)),
                ('sort_order', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'gwells_well_yield_unit',
                'ordering': ['sort_order', 'description'],
            },
        ),
        migrations.AddField(
            model_name='well',
            name='well_class',
            field=models.ForeignKey(db_column='well_class_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.WellClass', verbose_name='Well Class'),
        ),
        migrations.AddField(
            model_name='well',
            name='well_subclass',
            field=models.ForeignKey(blank=True, db_column='well_subclass_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.WellSubclass', verbose_name='Well Subclass'),
        ),
        migrations.AddField(
            model_name='well',
            name='well_yield_unit',
            field=models.ForeignKey(blank=True, db_column='well_yield_unit_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.WellYieldUnit'),
        ),
        migrations.AddField(
            model_name='ltsaowner',
            name='province_state',
            field=models.ForeignKey(blank=True, db_column='province_state_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceState', verbose_name='Province'),
        ),
        migrations.AddField(
            model_name='ltsaowner',
            name='well',
            field=models.ForeignKey(blank=True, db_column='well_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.Well'),
        ),
        migrations.AddField(
            model_name='driller',
            name='drilling_company',
            field=models.ForeignKey(db_column='drilling_company_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.DrillingCompany', verbose_name='Drilling Company'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='driller_responsible',
            field=models.ForeignKey(db_column='driller_responsible_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.Driller', verbose_name='Person Responsible for Drilling'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='intended_water_use',
            field=models.ForeignKey(blank=True, db_column='intended_water_use_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.IntendedWaterUse', verbose_name='Water Supply Well Intended Water Use'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='legal_land_district',
            field=models.ForeignKey(blank=True, db_column='legal_land_district_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.LandDistrict', verbose_name='Land District'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='owner_province_state',
            field=models.ForeignKey(blank=True, db_column='province_state_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.ProvinceState', verbose_name='Province'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='well',
            field=models.ForeignKey(blank=True, db_column='well_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.Well'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='well_activity_type',
            field=models.ForeignKey(db_column='well_activity_type_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.WellActivityType', verbose_name='Type of Work'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='well_class',
            field=models.ForeignKey(db_column='well_class_guid', on_delete=django.db.models.deletion.CASCADE, to='gwells.WellClass', verbose_name='Well Class'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='well_subclass',
            field=models.ForeignKey(blank=True, db_column='well_subclass_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.WellSubclass', verbose_name='Well Subclass'),
        ),
        migrations.AddField(
            model_name='activitysubmission',
            name='well_yield_unit',
            field=models.ForeignKey(blank=True, db_column='well_yield_unit_guid', null=True, on_delete=django.db.models.deletion.CASCADE, to='gwells.WellYieldUnit'),
        ),
    ]
