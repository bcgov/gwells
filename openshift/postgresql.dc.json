{
    "apiVersion": "v1",
    "kind": "Template",
    "labels": {
        "template": "postgresql-persistent-template"
    },
    "metadata": {
        "creationTimestamp": null,
        "name": "gwells-postgresql-dc"
    },
    "parameters": [
        {
            "description": "Maximum amount of memory the container can use.",
            "displayName": "Memory Limit",
            "name": "MEMORY_LIMIT",
            "required": true,
            "value": "512Mi"
        },
        {
            "description": "The OpenShift ImageStream name.",
            "displayName": "IMAGE_STREAM_NAME",
            "name": "IMAGE_STREAM_NAME",
            "value": "postgresql"
        },
        {
            "description": "The OpenShift Namespace where the ImageStream resides.",
            "displayName": "Namespace",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift"
        },
        {
            "description": "The name of the OpenShift Service exposed for the database.",
            "displayName": "Database Service Name",
            "name": "DATABASE_SERVICE_NAME",
            "required": true,
            "value": "postgresql"
        },
        {
            "description": "Username for PostgreSQL user that will be used for accessing the database.",
            "displayName": "PostgreSQL Connection Username",
            "from": "user[A-Z0-9]{3}",
            "generate": "expression",
            "name": "POSTGRESQL_USER",
            "required": true
        },
        {
            "description": "Password for the PostgreSQL connection user.",
            "displayName": "PostgreSQL Connection Password",
            "from": "[a-zA-Z0-9]{16}",
            "generate": "expression",
            "name": "POSTGRESQL_PASSWORD",
            "required": true
        },
        {
            "description": "Name of the PostgreSQL database accessed.",
            "displayName": "PostgreSQL Database Name",
            "name": "POSTGRESQL_DATABASE",
            "required": true,
            "value": "sampledb"
        },
        {
            "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
            "displayName": "Volume Capacity",
            "name": "VOLUME_CAPACITY",
            "required": true,
            "value": "1Gi"
        },
        {
            "description": "Version of PostgreSQL image to be used (9.2, 9.4, 9.5 or latest).",
            "displayName": "Version of PostgreSQL Image",
            "name": "IMAGE_STREAM_VERSION",
            "required": true,
            "value": "9.5"
        }
    ],
    "objects": [
        {
            "apiVersion": "v1",
            "kind": "Secret",
            "metadata": {
                "annotations": {
                    "template.openshift.io/expose-database_name": "{.data['database-name']}",
                    "template.openshift.io/expose-password": "{.data['database-password']}",
                    "template.openshift.io/expose-username": "{.data['database-user']}",
                    "as-copy-of": "gwells-database-secrets"
                },
                "name": "${DATABASE_SERVICE_NAME}"
            },
            "stringData": {
                "database-name": "${POSTGRESQL_DATABASE}",
                "database-password": "${POSTGRESQL_PASSWORD}",
                "database-user": "${POSTGRESQL_USER}",
                "fdw-database-user": null,
                "fdw-database-password": null,
                "fdw-database-server": null,
                "fdw-database-schema": null
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "template.openshift.io/expose-uri": "postgres://{.spec.clusterIP}:{.spec.ports[?(.name==\"postgresql\")].port}"
                },
                "name": "${DATABASE_SERVICE_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "name": "postgresql",
                        "nodePort": 0,
                        "port": 5432,
                        "protocol": "TCP",
                        "targetPort": 5432
                    }
                ],
                "selector": {
                    "name": "${DATABASE_SERVICE_NAME}"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "name": "${DATABASE_SERVICE_NAME}",
                "annotations":{
                    "template.openshift.io.bcgov/create": "true"
                }
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${IMAGE_STREAM_NAME}",
                "creationTimestamp": null,
                "labels": {
                    "base-name": "gwells-postgresql"
                },
                "annotations": {}
            },
            "spec": {
                "lookupPolicy": {
                    "local": false
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                },
                "name": "${DATABASE_SERVICE_NAME}"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "name": "${DATABASE_SERVICE_NAME}"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "name": "${DATABASE_SERVICE_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "capabilities": {},
                                "env": [
                                    {
                                        "name": "POSTGRESQL_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "database-user",
                                                "name": "${DATABASE_SERVICE_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "database-password",
                                                "name": "${DATABASE_SERVICE_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "database-name",
                                                "name": "${DATABASE_SERVICE_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FDW_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "fdw-database-user",
                                                "name": "${DATABASE_SERVICE_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FDW_PASS",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "fdw-database-password",
                                                "name": "${DATABASE_SERVICE_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FDW_FOREIGN_SERVER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "fdw-database-server",
                                                "name": "${DATABASE_SERVICE_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FDW_FOREIGN_SCHEMA",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "fdw-database-schema",
                                                "name": "${DATABASE_SERVICE_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FDW_NAME",
                                        "value": "wells_oradb"
                                    },
                                    {
                                        "name": "FDW_SCHEMA",
                                        "value": "wells"
                                    },
                                    {
                                        "name": "PGOPTIONS",
                                        "value": "-c maintenance_work_mem=128MB"
                                    }
                                ],
                                "image": " ",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "initialDelaySeconds": 30,
                                    "tcpSocket": {
                                        "port": 5432
                                    },
                                    "timeoutSeconds": 1
                                },
                                "name": "postgresql",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/sh",
                                            "-i",
                                            "-c",
                                            "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                                        ]
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "${MEMORY_LIMIT}"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {},
                                    "privileged": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/pgsql/data",
                                        "name": "${DATABASE_SERVICE_NAME}-data"
                                    },
                                    {
                                        "mountPath": "/var/run/postgresql",
                                        "name": "${DATABASE_SERVICE_NAME}-run"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "volumes": [
                            {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "emptyDir": {}

                            },
                            {
                                "name": "${DATABASE_SERVICE_NAME}-run",
                                "emptyDir": {}
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "postgresql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${IMAGE_STREAM_NAME}:${IMAGE_STREAM_VERSION}",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}"
                            },
                            "lastTriggeredImage": ""
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            },
            "status": {}
        }
    ]
}
