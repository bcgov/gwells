{
	"info": {
		"_postman_id": "5372c36b-759f-4701-9798-c1e4cedf70c1",
		"name": "GWELLS Submissions API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Log in",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46c51db8-8a25-45d5-941f-f55f682ab9b6",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json()",
									"pm.environment.set(\"token\", jsonData.access_token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code, \"Login was not successful\").to.equal(200);",
									"})",
									"",
									"pm.test(\"A token was returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.access_token, \"a token was not returned\").to.be.ok;",
									"    pm.expect(jsonData.access_token.length).to.be.above(36);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{test_user}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{test_password}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth_server}}",
							"host": [
								"{{auth_server}}"
							]
						},
						"description": "Get token (log in)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Wells",
			"item": []
		},
		{
			"name": "Activity Submissions",
			"item": [
				{
					"name": "General",
					"item": [
						{
							"name": "Submission form Options",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20837dbe-0390-4709-b8dc-4ac3b22153f4",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"})",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/options/?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"options",
										""
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Get form submission options"
							},
							"response": []
						},
						{
							"name": "Submission list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20837dbe-0390-4709-b8dc-4ac3b22153f4",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"})",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										""
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Create new driller for submission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05a0005d-cae7-447a-b666-63de221afd22",
										"type": "text/javascript",
										"exec": [
											"( function() {",
											"    pm.test(\"Successful POST request\", function () {",
											"        pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"    });",
											"    ",
											"    var jsonData = pm.response.json()",
											"    pm.environment.set(\"created_driller_guid\", jsonData.person_guid);",
											"    pm.environment.set(\"driller_audit_name\", jsonData.create_user);",
											"    ",
											"    pm.test(\"The record's identifier is in UUID format\", function () {",
											"        var uuid_re = /\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}/;",
											"        var match = uuid_re.exec(jsonData.person_guid);",
											"        pm.expect(match).to.be.ok;",
											"        pm.expect(match.length).to.be.ok;",
											"        pm.expect(match[0]).to.eql(jsonData.person_guid);",
											"    });",
											"    ",
											"    pm.test(\"Person first name equals name supplied in request\", function () {",
											"        pm.expect(jsonData.first_name).to.eql(\"Bobby\");",
											"    });",
											"    ",
											"    pm.test(\"Last name equals value supplied in request\", function () {",
											"        pm.expect(jsonData.surname).to.eql(\"Driller\");",
											"    });",
											"    ",
											"    pm.test(\"Audit fields (create_user, create_date) were filled in by backend\", function () {",
											"        pm.expect(jsonData.create_user.length).to.be.ok;",
											"        pm.expect(jsonData.create_date.length).to.be.ok;",
											"    });",
											"})();",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Bobby",
											"type": "text"
										},
										{
											"key": "surname",
											"value": "Driller",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/drillers/?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"drillers",
										""
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Create a new driller to be registered"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Construction",
					"item": [
						{
							"name": "Construction Submission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c4a1015-b29c-4fc3-8579-29b9e8dac3c8",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"pm.environment.set('filing_number', jsonData.filing_number)",
											"var created_driller_guid = pm.environment.get('created_driller_guid')",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											"pm.test(\"Expect well record to be created\", function() {",
											"    pm.expect(jsonData.well).to.be.ok;",
											"})",
											"",
											"pm.test(\"Expect driller_responsible to be returned\", function() {",
											"    pm.expect(jsonData.consultant_company).to.equal(\"Inc & Inc\")",
											"})",
											"",
											"pm.test(\"Expect consultant_name to be returned\", function() {",
											"    pm.expect(jsonData.consultant_name).to.equal(\"Bobothy\")",
											"})",
											"",
											"pm.test(\"Expect driller_name to be returned\", function() {",
											"    pm.expect(jsonData.driller_name).to.equal(\"Jimithy\")",
											"})",
											"",
											"pm.test(\"Expect driller_responsible to be returned\", function() {",
											"    pm.expect(jsonData.person_responsible).to.equal(created_driller_guid)",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"person_responsible\": \"{{created_driller_guid}}\",\n\t\"driller_name\": \"Jimithy\",\n\t\"consultant_name\": \"Bobothy\",\n\t\"consultant_company\": \"Inc & Inc\",\n\t\"work_end_date\": \"2018-07-10\",\n\t\"owner_full_name\": \"Holly Homeowner\",\n\t\"work_start_date\": \"2018-07-01\",\n\t\"owner_province_state\": \"BC\",\n\t\"owner_mailing_address\": \"321 Main Street\",\n\t\"owner_city\": \"Anytown\",\n\t\"well_orientation\": false\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Submit a submission"
							},
							"response": []
						},
						{
							"name": "Check submission - created well",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7eb46403-4d9e-40c9-b32c-bde682037045",
										"exec": [
											"var jsonData = pm.response.json();",
											"var created_driller_guid = pm.environment.get('created_driller_guid')",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expect casing list to be empty\", function() {",
											"    pm.expect(jsonData.casing_set.length).to.equal(0);",
											"})",
											"",
											"pm.test(\"Expect screen list empty\", function() {",
											"    pm.expect(jsonData.screen_set.length).to.equal(0);",
											"})",
											"",
											"pm.test(\"Expect well orientation false\", function() {",
											"    pm.expect(jsonData.well_orientation).to.equal(false);",
											"})",
											"",
											"pm.test(\"Expect linerperforation to be empty\", function() {",
											"    pm.expect(jsonData.linerperforation_set.length).to.equal(0);",
											"})",
											"",
											"pm.test(\"person_responsible is an object with name and guid\", function() {",
											"    pm.expect('name' in jsonData['person_responsible']).to.be.true",
											"})",
											"",
											"pm.test(\"person_responsible is an object with name and guid\", function() {",
											"    pm.expect('person_guid' in jsonData['person_responsible']).to.be.true",
											"    pm.expect(jsonData.person_responsible.person_guid).to.equal(created_driller_guid)",
											"})",
											"",
											"pm.test(\"We expect the default accuracy code to be 'H' (GPS)\", function() {",
											"    pm.expect(jsonData.coordinate_acquisition_code).to.equal('H')",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Check if the created well matched submission"
							},
							"response": []
						},
						{
							"name": "Check submission - created construction submission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8cda82f1-4f66-419a-9d79-636186a44b6c",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expect casing list to be empty\", function() {",
											"    pm.expect(jsonData.casing_set.length).to.equal(0);",
											"})",
											"",
											"pm.test(\"Expect screen list empty\", function() {",
											"    pm.expect(jsonData.screen_set.length).to.equal(0);",
											"})",
											"",
											"pm.test(\"Expect linerperforation to be empty\", function() {",
											"    pm.expect(jsonData.linerperforation_set.length).to.equal(0);",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/{{filing_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"{{filing_number}}"
									]
								},
								"description": "Check if the submission was created correctly."
							},
							"response": []
						},
						{
							"name": "Construction Submission - casings",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6ccd3af-884d-45fb-93f4-21294aa25b3a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											"pm.test(\"Expect casings records to be created\", function() {",
											"    pm.expect(jsonData.casing_set.length).to.equal(2);",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"casing_set\": [\n\t\t{\n\t\t\t\"casing_code\": \"SURFACE\",\n\t\t\t\"start\":\"1\",\n\t\t\t\"end\":\"1\",\n\t\t\t\"diameter\":\"1\",\n\t\t\t\"drive_shoe\":\"False\",\n\t\t\t\"id\":0,\n\t\t\t\"wall_thickness\":\"87\"\n\t\t},\n\t\t{\n\t\t\t\"casing_code\":\"SURFACE\",\n\t\t\t\"start\":\"2\",\n\t\t\t\"casing_material\":\"STEEL\",\n\t\t\t\"end\":\"2\",\n\t\t\t\"diameter\":\"2\",\n\t\t\t\"drive_shoe\":\"True\",\n\t\t\t\"id\":1,\n\t\t\t\"wall_thickness\":\"7\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Construction Submission - casings - empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf57abbb-38dd-41f5-a5bc-b8b85d729ade",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"   pm.expect(pm.response.code).to.equal(400);",
											"})",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"casing_set\": [\n\t\t{\n\t\t},\n\t\t{\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Check submission - created well casings",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31a610c9-915e-4873-931a-613c8b1cfde4",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expect casing list to contain two entries\", function() {",
											"    pm.expect(jsonData.casing_set.length).to.equal(2);",
											"})",
											"",
											"pm.test(\"Expect screen list empty\", function() {",
											"    pm.expect(jsonData.screen_set.length).to.equal(0);",
											"})",
											"",
											"pm.test(\"Expect linerperforation to be empty\", function() {",
											"    pm.expect(jsonData.linerperforation_set.length).to.equal(0);",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Check if the created well matched submission"
							},
							"response": []
						},
						{
							"name": "Construction Submission - screen",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eaf2d1fa-c857-4c87-b7a5-bab319649826",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"",
											"pm.test(\"Status code is 201\", function() {",
											"    pm.expect(pm.response.code).to.equal(201);",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"liner_diameter\": 1,\n\t\"liner_from\": 0,\n\t\"liner_material\": \"PVC\",\n\t\"liner_thickness\": 2,\n\t\"liner_to\": 3,\n\t\"screen_set\": [\n\t\t{\n\t\t\t\"start\": 10,\n\t\t\t\"end\": 20,\n\t\t\t\"assembly_type\": \"SCREEN\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Construction Submission - screen empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78582a37-9917-4d5c-a736-a0db198978ef",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 400\", function() {",
											"    pm.expect(pm.response.code).to.equal(400);",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"liner_diameter\": 1,\n\t\"liner_from\": 0,\n\t\"liner_material\": \"PVC\",\n\t\"liner_thickness\": 2,\n\t\"liner_to\": 3,\n\t\"screen_set\": [\n\t\t{\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Check submission - created well screens",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d6d5f99-b61a-48a5-b3e3-c793a81a5622",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expect casing list to contain two entries\", function() {",
											"    pm.expect(jsonData.casing_set.length).to.equal(0);",
											"})",
											"",
											"pm.test(\"Expect screen list empty\", function() {",
											"    pm.expect(jsonData.screen_set.length).to.equal(1);",
											"})",
											"",
											"pm.test(\"Expect linerperforation to be empty\", function() {",
											"    pm.expect(jsonData.linerperforation_set.length).to.equal(0);",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Check if the created well matched submission"
							},
							"response": []
						},
						{
							"name": "Construction Submission - liner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af2703e6-b88c-41e0-a74f-14fdd2b1f927",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"liner_diameter\": 1,\n\t\"liner_from\": 0,\n\t\"liner_material\": \"PVC\",\n\t\"liner_thickness\": 2,\n\t\"liner_to\": 3,\n\t\"linerperforation_set\": [\n\t\t{\n\t\t\t\"start\": 0,\n\t\t\t\"end\": 10\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Construction Submission - liner empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3737032f-d35f-4597-a306-133d74120ae4",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"   pm.expect(pm.response.code).to.equal(400);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"liner_diameter\": 1,\n\t\"liner_from\": 0,\n\t\"liner_material\": \"PVC\",\n\t\"liner_thickness\": 2,\n\t\"liner_to\": 3,\n\t\"linerperforation_set\": [\n\t\t{}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Check submission - created well liners",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77ba3bf1-a4ad-476e-bd9a-c67bf0e7a34c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expect casing list to contain two entries\", function() {",
											"    pm.expect(jsonData.casing_set.length).to.equal(0);",
											"})",
											"",
											"pm.test(\"Expect screen list empty\", function() {",
											"    pm.expect(jsonData.screen_set.length).to.equal(0);",
											"})",
											"",
											"pm.test(\"Expect linerperforation to still have one value\", function() {",
											"    pm.expect(jsonData.linerperforation_set.length).to.equal(1);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Check if the created well matched submission"
							},
							"response": []
						},
						{
							"name": "Construction Submission - production data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af2703e6-b88c-41e0-a74f-14fdd2b1f927",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"liner_diameter\": 1,\n\t\"liner_from\": 0,\n\t\"liner_material\": \"PVC\",\n\t\"liner_thickness\": 2,\n\t\"liner_to\": 3,\n\t\"drawdown\": 10,\n\t\"yield_estimation_rate\": 10\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Check submission - production data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77ba3bf1-a4ad-476e-bd9a-c67bf0e7a34c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expect production data - yield estimation rate to be created\", function() {",
											"    pm.expect(jsonData.yield_estimation_rate).to.equal(\"10.00\")",
											"})",
											"",
											"pm.test(\"Expect production data - drawdown to be created\", function() {",
											"    pm.expect(jsonData.drawdown).to.equal(\"10.00\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Check if the created well matched submission"
							},
							"response": []
						},
						{
							"name": "Construction Submission - lithology",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af2703e6-b88c-41e0-a74f-14fdd2b1f927",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"lithologydescription_set\": [\n\t\t{\n\t\t\t\"lithology_from\": 0,\n\t\t\t\"lithology_to\": 10,\n\t\t\t\"lithology_raw_data\": \"SAND, silty, some gravel\",\n\t\t\t\"lithology_hardness\": \"DENSE\",\n\t\t\t\"lithology_colour\": 13,\n\t\t\t\"lithology_moisture\": \"WET\",\n\t\t\t\"water_bearing_estimated_flow\": 2.1\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Construction Submission - lithology empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af2703e6-b88c-41e0-a74f-14fdd2b1f927",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"lithologydescription_set\": [\n\t\t{}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Check submission - created lithology",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77ba3bf1-a4ad-476e-bd9a-c67bf0e7a34c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"",
											"pm.test(\"Expect lithology to have one value\", function() {",
											"    pm.expect(jsonData.lithologydescription_set.length).to.equal(1);",
											"})",
											"pm.test(\"Lithology entry: expect lithology_from to be 0.00\", function() {",
											"    pm.expect(jsonData.lithologydescription_set[0].lithology_from).to.equal('0.00');",
											"})",
											"pm.test(\"Lithology entry: expect lithology_to to be 10.00\", function() {",
											"    pm.expect(jsonData.lithologydescription_set[0].lithology_to).to.equal('10.00');",
											"})",
											"",
											"pm.test(\"Lithology entry: expect lithology_raw_data to be equal to first submission\", function() {",
											"    pm.expect(jsonData.lithologydescription_set[0].lithology_raw_data).to.equal('SAND, silty, some gravel');",
											"})",
											"pm.test(\"Lithology entry: expect color to be a vibrant shade of 13\", function() {",
											"    pm.expect(jsonData.lithologydescription_set[0].lithology_colour).to.equal('13');",
											"})",
											"pm.test(\"Lithology entry: expect hardness to be dense\", function() {",
											"    pm.expect(jsonData.lithologydescription_set[0].lithology_hardness).to.equal('DENSE');",
											"})",
											"pm.test(\"Lithology entry: expect moisture to be wet\", function() {",
											"    pm.expect(jsonData.lithologydescription_set[0].lithology_moisture).to.equal('WET');",
											"})",
											"pm.test(\"Lithology entry: expect water bearing flow to be 2.1\", function() {",
											"    pm.expect(jsonData.lithologydescription_set[0].water_bearing_estimated_flow).to.equal('2.1000');",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Check if the created well matched submission"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Alteration",
					"item": [
						{
							"name": "Alteration for unknown well",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cb93a2d-3c82-4504-9f6f-c68857e2f8d4",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"pm.environment.set('filing_number', jsonData.filing_number)",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"ALT\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"ALT_WELL_TEST_CITY\",\n\t\"owner_province_state\": \"BC\",\n\t\"casing_set\": [\n\t\t{\n\t\t\t\"casing_code\": \"SURFACE\",\n\t\t\t\"start\":\"10\",\n\t\t\t\"end\":\"20\",\n\t\t\t\"diameter\":\"1\",\n\t\t\t\"drive_shoe\":\"False\",\n\t\t\t\"id\":0,\n\t\t\t\"wall_thickness\":\"87\"\n\t\t}\n\t],\n    \"linerperforation_set\": [\n\t\t{\n\t\t\t\"start\": 10,\n\t\t\t\"end\": 20\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/alteration?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"alteration"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Check submission - well created - Alteration report on unknown well",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "758668aa-93ed-4341-9c01-1eb1c25985dd",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expected well owner city to match the submitted alteration report\", function() {",
											"    pm.expect(jsonData.owner_city).to.equal(\"ALT_WELL_TEST_CITY\");",
											"})",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Check if the created well matched submission"
							},
							"response": []
						},
						{
							"name": "Check submission - created alteration submission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "758668aa-93ed-4341-9c01-1eb1c25985dd",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expected well owner city to match the submitted alteration report\", function() {",
											"    pm.expect(jsonData.owner_city).to.equal(\"ALT_WELL_TEST_CITY\");",
											"})",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/{{filing_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"{{filing_number}}"
									]
								},
								"description": "Check if the submission was created correclty."
							},
							"response": []
						},
						{
							"name": "Create new driller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd75139a-e3d4-4e57-9eca-568872d2b9dc",
										"type": "text/javascript",
										"exec": [
											"( function() {",
											"    pm.test(\"Successful POST request\", function () {",
											"        pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"    });",
											"    ",
											"    var jsonData = pm.response.json()",
											"    pm.environment.set(\"created_driller_guid\", jsonData.person_guid);",
											"})();",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Bobby",
											"type": "text"
										},
										{
											"key": "surname",
											"value": "Driller",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/drillers/?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"drillers",
										""
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Create a new driller to be registered"
							},
							"response": []
						},
						{
							"name": "Create new company",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ce89229-b4af-45c3-8645-ef507a84011c",
										"exec": [
											"( function() {",
											"    pm.test(\"Successful POST request\", function () {",
											"        pm.expect(pm.response.code, \"response code not 201\").to.be.oneOf([201,202]);",
											"    });",
											"    ",
											"    var jsonData = pm.response.json()",
											"    pm.environment.set(\"company_guid\", jsonData.org_guid);",
											"})();",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Steve's Drilling Inc.",
											"type": "text"
										},
										{
											"key": "street_address",
											"value": "1012 Douglas",
											"type": "text"
										},
										{
											"key": "city",
											"value": "",
											"type": "text"
										},
										{
											"key": "postal_code",
											"value": "a1a 1a1",
											"type": "text"
										},
										{
											"key": "main_tel",
											"value": "",
											"type": "text"
										},
										{
											"key": "fax_tel",
											"value": "",
											"type": "text"
										},
										{
											"key": "website_url",
											"value": "",
											"type": "text"
										},
										{
											"key": "province_state",
											"value": "BC",
											"type": "text"
										},
										{
											"key": "email",
											"value": "company@example.com",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/organizations/?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										""
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Alteration - Person Responsible",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b7855ea-c33f-45a0-912c-9a02fc8077d2",
										"exec": [
											"var jsonData = pm.response.json();",
											"var created_driller_guid = pm.environment.get('created_driller_guid');",
											"var company_guid = pm.environment.get('company_guid');",
											"var fields = {",
											"    \"consultant_company\": \"John Company\",",
											"\t\"consultant_name\": \"John Consultant\",",
											"\t\"driller_name\": \"John Person\",",
											"\t\"person_responsible\": created_driller_guid,",
											"\t\"company_of_person_responsible\": company_guid",
											"}",
											"",
											"pm.environment.set('filing_number', jsonData.filing_number)",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											"Object.keys(fields).forEach((key) => {",
											"    pm.test(`response contains ${key}`, function() {",
											"        pm.expect(key in jsonData).to.be.true;",
											"    })",
											"    pm.test(`field: ${key} returned`, function() {",
											"        pm.expect(jsonData[key]).to.equal(fields[key]);",
											"    })",
											"})",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well\": {{well_tag_number}},\n\t\"consultant_company\": \"John Company\",\n\t\"consultant_name\": \"John Consultant\",\n\t\"driller_name\": \"John Person\",\n\t\"person_responsible\": \"{{created_driller_guid}}\",\n\t\"company_of_person_responsible\": \"{{company_guid}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/alteration",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"alteration"
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Alteration - Person Responsible - Well Updated",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "027d3bd1-6dcc-4552-99da-324c714df9d0",
										"exec": [
											"var jsonData = pm.response.json();",
											"var created_driller_guid = pm.environment.get('created_driller_guid');",
											"var fields = {",
											"    \"consultant_company\": \"John Company\",",
											"\t\"consultant_name\": \"John Consultant\",",
											"\t\"driller_name\": \"John Person\"",
											"}",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"Object.keys(fields).forEach((key) => {",
											"    pm.test(`response contains ${key}`, function() {",
											"        pm.expect(key in jsonData).to.be.true;",
											"    })",
											"    pm.test(`field: ${key} returned`, function() {",
											"        pm.expect(jsonData[key]).to.equal(fields[key]);",
											"    })",
											"})",
											"",
											"pm.test('person_responsible returned', function() {",
											"    pm.expect(jsonData.person_responsible.person_guid).to.equal(created_driller_guid)",
											"})",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Decommission",
					"item": [
						{
							"name": "Decommission well",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b89b1daf-40de-46c1-9567-608d995d0702",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"pm.environment.set('filing_number', jsonData.filing_number)",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"DEC\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"ALT_WELL_TEST_CITY\",\n\t\"owner_province_state\": \"BC\",\n\t\"work_start_date\": \"2018-01-01\",\n\t\"work_end_date\": \"2018-01-01\",\n\t\"decommission_description_set\": [\n\t\t{\n\t\t\t\"start\": 0,\n\t\t\t\"end\": 1,\n\t\t\t\"material\": \"CONCRETE\",\n\t\t\t\"observations\": \"It worked!\"\n\t\t}\n\t],\n\t\"decommission_details\": \"Test\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/decommission?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"decommission"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Check decommission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6071dbc1-9a9a-4806-b276-9ea94186a23c",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expected well owner city to match the submitted alteration report\", function() {",
											"    pm.expect(jsonData.owner_city).to.equal(\"ALT_WELL_TEST_CITY\");",
											"})",
											"",
											"pm.test(\"Well status is 'closure'\", function() {",
											"    pm.expect(jsonData.well_status).to.equal(\"CLOSURE\");",
											"})"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Check if the created well matched submission"
							},
							"response": []
						},
						{
							"name": "Check decommission - created decommission submission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0ec586c-6de3-424e-b7cc-67f2b63a32c0",
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expected well owner city to match the submitted alteration report\", function() {",
											"    pm.expect(jsonData.owner_city).to.equal(\"ALT_WELL_TEST_CITY\");",
											"})",
											"",
											"pm.test(\"Expect linerperforation to be undefined\", function() {",
											"    pm.expect(jsonData.linerperforation_set).to.equal(undefined);",
											"})",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/{{filing_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"{{filing_number}}"
									]
								},
								"description": "Check if the submission was created correclty."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Staff Edit",
					"item": [
						{
							"name": "Well Location",
							"item": [
								{
									"name": "Construction Submission; for Well Location",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "74cf621d-6689-43e8-be83-f6b1cb4d5d0a",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.environment.set(\"well_tag_number\", jsonData.well);",
													"pm.environment.set('filing_number', jsonData.filing_number)",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"   pm.expect(pm.response.code).to.equal(201);",
													"})",
													"",
													"pm.test(\"Expect well record to be created\", function() {",
													"    pm.expect(jsonData.well).to.be.ok;",
													"})",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "JWT {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "driller_responsible",
													"value": "{{created_driller_guid}}",
													"type": "text"
												},
												{
													"key": "work_end_date",
													"value": "2018-07-02",
													"type": "text"
												},
												{
													"key": "owner_full_name",
													"value": "Holly Homeowner",
													"type": "text"
												},
												{
													"key": "work_start_date",
													"value": "2018-07-01",
													"type": "text"
												},
												{
													"key": "owner_province_state",
													"value": "BC",
													"type": "text"
												},
												{
													"key": "owner_mailing_address",
													"value": "321 Main Street",
													"type": "text"
												},
												{
													"key": "owner_city",
													"value": "Anytown",
													"type": "text"
												},
												{
													"key": "consultant_name",
													"value": "John",
													"type": "text"
												},
												{
													"key": "well_orientation",
													"value": "True",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"submissions",
												"construction"
											],
											"query": [
												{
													"key": "format",
													"value": "json"
												}
											]
										},
										"description": "Submit a construction submission"
									},
									"response": []
								},
								{
									"name": "Staff Edit; Well Location",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d810c676-8904-437e-8c93-3ea1d36e1bd1",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"   pm.expect(pm.response.code).to.equal(201);",
													"})",
													"",
													"pm.test(\"Expect well_tag_number to match created\", function() {",
													"    pm.expect(jsonData.well).to.equal(pm.environment.get(\"well_tag_number\"))",
													"})",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "JWT {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"well\": {{well_tag_number}},\n\t\"street_address\": \"Some street\",\n\t\"city\":\"Some city\",\n\t\"legal_lot\":\"3\",\n\t\"legal_plan\":\"3\",\n\t\"legal_district_lot\":\"3\",\n\t\"legal_block\":\"3\",\n\t\"legal_section\":\"3\",\n\t\"legal_township\":\"3\",\n\t\"legal_range\":\"3\",\n\t\"land_district\":\"03\",\n\t\"legal_pid\":\"3\",\n\t\"well_location_description\":\"Description of well location\"\n}"
										},
										"url": {
											"raw": "{{base_url}}/api/v1/submissions/staff_edit?format=json",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"submissions",
												"staff_edit"
											],
											"query": [
												{
													"key": "format",
													"value": "json"
												}
											]
										},
										"description": "Submit an edit submission"
									},
									"response": []
								},
								{
									"name": "Check Well Edited; Well Location",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a7b16fb6-1b37-44b8-96b7-118759edb19b",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"var expected = {",
													"\t\"street_address\": \"Some street\",",
													"\t\"city\":\"Some city\",",
													"\t\"legal_lot\":\"3\",",
													"\t\"legal_plan\":\"3\",",
													"\t\"legal_district_lot\":\"3\",",
													"\t\"legal_block\":\"3\",",
													"\t\"legal_section\":\"3\",",
													"\t\"legal_township\":\"3\",",
													"\t\"legal_range\":\"3\",",
													"\t\"land_district\":\"03\",",
													"\t\"legal_pid\":3,",
													"\t\"well_location_description\":\"Description of well location\"",
													"};",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"pm.test(\"Expect value to be updated\", function() {",
													"    for (var key in expected) {",
													"        pm.expect(jsonData[key], key).to.equal(expected[key]);",
													"    }",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "JWT {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"wells",
												"{{well_tag_number}}"
											]
										},
										"description": "Get a well"
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Well Coordinates",
							"item": [
								{
									"name": "Staff Edit; Well Coordinate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d810c676-8904-437e-8c93-3ea1d36e1bd1",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"   pm.expect(pm.response.code).to.equal(201);",
													"})",
													"",
													"pm.test(\"Expect well_tag_number to match created\", function() {",
													"    pm.expect(jsonData.well).to.equal(pm.environment.get(\"well_tag_number\"))",
													"})",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "JWT {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"well\": {{well_tag_number}},\n\t\"latitude\": 1,\n\t\"longitude\": 1,\n\t\"coordinate_acquisition_code\": \"B\"\n}"
										},
										"url": {
											"raw": "{{base_url}}/api/v1/submissions/staff_edit?format=json",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"submissions",
												"staff_edit"
											],
											"query": [
												{
													"key": "format",
													"value": "json"
												}
											]
										},
										"description": "Submit an edit submission"
									},
									"response": []
								},
								{
									"name": "Check Well Edited; Well Location",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a7b16fb6-1b37-44b8-96b7-118759edb19b",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"var expected = {",
													"\t\"latitude\": \"1.000000\",",
													"\t\"longitude\": \"1.000000\",",
													"\t\"coordinate_acquisition_code\": \"B\"",
													"};",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"pm.test(\"Expect value to be updated\", function() {",
													"    for (var key in expected) {",
													"        pm.expect(jsonData[key], key).to.equal(expected[key]);",
													"    }",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "JWT {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"wells",
												"{{well_tag_number}}"
											]
										},
										"description": "Get a well"
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Construction Submission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74cf621d-6689-43e8-be83-f6b1cb4d5d0a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"pm.environment.set('filing_number', jsonData.filing_number)",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											"pm.test(\"Expect well record to be created\", function() {",
											"    pm.expect(jsonData.well).to.be.ok;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "driller_responsible",
											"value": "{{created_driller_guid}}",
											"type": "text"
										},
										{
											"key": "work_end_date",
											"value": "2018-07-02",
											"type": "text"
										},
										{
											"key": "owner_full_name",
											"value": "Holly Homeowner",
											"type": "text"
										},
										{
											"key": "work_start_date",
											"value": "2018-07-01",
											"type": "text"
										},
										{
											"key": "owner_province_state",
											"value": "BC",
											"type": "text"
										},
										{
											"key": "owner_mailing_address",
											"value": "321 Main Street",
											"type": "text"
										},
										{
											"key": "owner_city",
											"value": "Anytown",
											"type": "text"
										},
										{
											"key": "consultant_name",
											"value": "John",
											"type": "text"
										},
										{
											"key": "well_orientation",
											"value": "True",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Submit a submission"
							},
							"response": []
						},
						{
							"name": "Staff Edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d810c676-8904-437e-8c93-3ea1d36e1bd1",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											"pm.test(\"Expect well_tag_number to match created\", function() {",
											"    pm.expect(jsonData.well).to.equal(pm.environment.get(\"well_tag_number\"))",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well\": {{well_tag_number}},\n\t\"consultant_name\": \"John Mann\",\n\t\"owner_full_name\": \"Buddy\",\n\t\"ground_elevation_method\": \"10K_MAP\",\n\t\"ground_elevation\": 12,\n\t\"drilling_method\": \"AIR_ROTARY\",\n\t\"other_drilling_method\": \"Shovel\",\n\t\"well_orientation\": \"False\",\n\t\"observation_well_status\": \"Active\",\n\t\"observation_well_number\": 123,\n\t\"drawdown\": 11,\n\t\"yield_estimation_rate\": 11\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/staff_edit?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"staff_edit"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Submit a submission"
							},
							"response": []
						},
						{
							"name": "Check Well Edited",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7b16fb6-1b37-44b8-96b7-118759edb19b",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test(\"Expect consultant name to be updated\", function() {",
											"    pm.expect(jsonData['consultant_name']).to.equal('John Mann')",
											"})",
											"",
											"pm.test(\"Expect owner name to be updated\", function() {",
											"    pm.expect(jsonData['owner_full_name']).to.equal('Buddy')",
											"})",
											"",
											"pm.test(\"Expect owner city to NOT be updated\", function() {",
											"    pm.expect(jsonData['owner_city']).to.equal('Anytown')",
											"})",
											"",
											"pm.test(\"Expect well orientation to be updated\", function() {",
											"    pm.expect(jsonData['well_orientation']).to.equal(false)",
											"})",
											"",
											"pm.test(\"Expect other_drilling_method to be updated\", function() {",
											"    pm.expect(jsonData['other_drilling_method']).to.equal('Shovel')",
											"})",
											"",
											"pm.test(\"Expect observation_well_number to be updated\", function() {",
											"    pm.expect(jsonData['observation_well_number']).to.equal('123')",
											"})",
											"",
											"pm.test(\"Expect observation_well_status to be updated\", function() {",
											"    pm.expect(jsonData['observation_well_status']).to.equal('Active')",
											"})",
											"",
											"pm.test(\"Expect production data - yield estimation rate to be updated\", function() {",
											"    pm.expect(jsonData.yield_estimation_rate).to.equal(\"11.00\")",
											"})",
											"",
											"pm.test(\"Expect the well_yield_unit to default to USGPM\", function() {",
											"    pm.expect(jsonData.well_yield_unit).to.equal(\"USGPM\")",
											"})",
											"",
											"pm.test(\"Expect production data - drawdown to be updated\", function() {",
											"    pm.expect(jsonData.drawdown).to.equal(\"11.00\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"wells",
										"{{well_tag_number}}"
									]
								},
								"description": "Request a list of wells"
							},
							"response": []
						},
						{
							"name": "Construction Submission - with foreign key sets",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74cf621d-6689-43e8-be83-f6b1cb4d5d0a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"well_tag_number\", jsonData.well);",
											"pm.environment.set('filing_number', jsonData.filing_number)",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											"pm.test(\"Expect well record to be created\", function() {",
											"    pm.expect(jsonData.well).to.be.ok;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"liner_diameter\": 1,\n\t\"liner_from\": 0,\n\t\"liner_material\": \"PVC\",\n\t\"liner_thickness\": 2,\n\t\"liner_to\": 3,\n\t\"linerperforation_set\": [\n\t\t{\n\t\t\t\"start\": 0,\n\t\t\t\"end\": 10\n\t\t},\n\t\t\t\t{\n\t\t\t\"start\": 10,\n\t\t\t\"end\": 12\n\t\t}\n\t],\n\t\"drawdown\": 10,\n\t\"yield_estimation_rate\": 10\n}\n"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"construction"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Submit a submission"
							},
							"response": []
						},
						{
							"name": "Staff Edit - Replace sets",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d810c676-8904-437e-8c93-3ea1d36e1bd1",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											"pm.test(\"Expect well_tag_number to match created\", function() {",
											"    pm.expect(jsonData.well).to.equal(pm.environment.get(\"well_tag_number\"))",
											"})",
											"",
											"pm.test(\"Expect liner set to be updated\", function() {",
											"    pm.expect(jsonData.linerperforation_set[0].end).to.equal(\"8.00\")",
											"    pm.expect(jsonData.linerperforation_set[1].start).to.equal(\"8.00\")",
											"})",
											"pm.test(\"Expect screen set to be updated\", function() {",
											"    pm.expect(jsonData.screen_set[0].end).to.equal(\"15.00\")",
											"    pm.expect(jsonData.screen_set[1].start).to.equal(\"15.00\")",
											"})",
											"pm.test(\"Expect casing set to be updated\", function() {",
											"    pm.expect(jsonData.casing_set[0].end).to.equal(\"2.00\")",
											"    pm.expect(jsonData.casing_set[1].start).to.equal(\"4.00\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well\": {{well_tag_number}},\n\t\"consultant_name\": \"John Mann\",\n\t\"owner_full_name\": \"Buddy\",\n\t\"ground_elevation_method\": \"10K_MAP\",\n\t\"ground_elevation\": 12,\n\t\"drilling_method\": \"AIR_ROTARY\",\n\t\"other_drilling_method\": \"Shovel\",\n\t\"well_orientation\": \"False\",\n\t\"linerperforation_set\": [\n\t\t{\n\t\t\t\"start\": 0,\n\t\t\t\"end\": 8\n\t\t},\n\t\t{\n\t\t\t\"start\": 8,\n\t\t\t\"end\": 12\n\t\t}\n\t],\n\t\"screen_set\": [\n\t\t{\n\t\t\t\"start\": 5,\n\t\t\t\"end\": 15,\n\t\t\t\"assembly_type\": \"SCREEN\"\n\t\t},\n\t\t{\n\t\t\t\"start\": 15,\n\t\t\t\"end\": 20,\n\t\t\t\"assembly_type\": \"SCREEN\"\n\t\t}\n\t],\n\t\"casing_set\": [\n\t\t{\n\t\t\t\"casing_code\": \"SURFACE\",\n\t\t\t\"start\":\"1\",\n\t\t\t\"end\":\"2\",\n\t\t\t\"diameter\":\"1\",\n\t\t\t\"drive_shoe\":\"False\",\n\t\t\t\"id\":0,\n\t\t\t\"wall_thickness\":\"87\"\n\t\t},\n\t\t{\n\t\t\t\"casing_code\":\"SURFACE\",\n\t\t\t\"start\":\"4\",\n\t\t\t\"casing_material\":\"STEEL\",\n\t\t\t\"end\":\"8\",\n\t\t\t\"diameter\":\"2\",\n\t\t\t\"drive_shoe\":\"True\",\n\t\t\t\"id\":1,\n\t\t\t\"wall_thickness\":\"7\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/staff_edit?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"staff_edit"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Submit a submission"
							},
							"response": []
						},
						{
							"name": "Create aquifer for well",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e74f248-5709-45ca-9105-1294977c9001",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"created_aquifer_for_well\", jsonData.aquifer_id);",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "aquifer_name",
											"value": "Cool Aquifer",
											"type": "text"
										},
										{
											"key": "area",
											"value": "10",
											"type": "text"
										},
										{
											"key": "demand",
											"value": "H",
											"type": "text"
										},
										{
											"key": "known_water_use",
											"value": "M",
											"type": "text"
										},
										{
											"key": "litho_stratographic_unit",
											"value": "Aquifer Litho Stratographic Unit",
											"type": "text"
										},
										{
											"key": "location_description",
											"value": "Location Description",
											"type": "text"
										},
										{
											"key": "mapping_year",
											"value": "1991",
											"type": "text"
										},
										{
											"key": "material",
											"value": "B",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "Notes",
											"type": "text"
										},
										{
											"key": "productivity",
											"value": "H",
											"type": "text"
										},
										{
											"key": "quality_concern",
											"value": "N",
											"type": "text"
										},
										{
											"key": "subtype",
											"value": "1a",
											"type": "text"
										},
										{
											"key": "vulnerability",
											"value": "H",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/aquifers/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"aquifers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Staff Edit - Associate well with aquifer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d810c676-8904-437e-8c93-3ea1d36e1bd1",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.expect(pm.response.code).to.equal(201);",
											"})",
											"",
											"pm.test(\"Expect aquifer id to match created aquifer\", function() {",
											"    pm.expect(jsonData.aquifer).to.equal(pm.environment.get(\"created_aquifer_for_well\"))",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"well\": {{well_tag_number}},\n\t\"aquifer\": {{created_aquifer_for_well}}\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/submissions/staff_edit?format=json",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"submissions",
										"staff_edit"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								},
								"description": "Submit a submission"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Stacking",
			"item": [
				{
					"name": "Submission - construction submission",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f43f719e-73c7-4508-a64a-5caeb226bfd5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"well_tag_number\", jsonData.well);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.expect(pm.response.code).to.equal(201);",
									"})",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"well_activity_type\": \"CON\",\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"casing_set\": [\n\t\t{\n\t\t\t\"casing_code\": \"SURFACE\",\n\t\t\t\"start\":\"0\",\n\t\t\t\"end\":\"10\",\n\t\t\t\"diameter\":\"1\",\n\t\t\t\"drive_shoe\":\"False\",\n\t\t\t\"id\":0,\n\t\t\t\"wall_thickness\":\"87\"\n\t\t}\n\t],\n\t\"screen_set\": [\n        {\n            \"start\": \"0.00\",\n            \"end\": \"10.00\",\n            \"internal_diameter\": null,\n            \"assembly_type\": null,\n            \"slot_size\": null\n        }\n    ],\n    \"linerperforation_set\": [\n\t\t{\n\t\t\t\"start\": 0,\n\t\t\t\"end\": 10\n\t\t}\n\t],\n\t\"well_class\": \"GEOTECH\",\n\t\"driller_name\": \"Bob\",\n\t\"consultant_name\": \"Lois\",\n\t\"consultant_company\": \"Lois Consulting\",\n\t\"work_start_date\": \"2018-01-01\",\n\t\"work_end_date\": \"2018-01-01\",\n\t\"legal_pid\": \"123132\",\n\t\"well_location_description\": \"At the top of the hill\",\n\t\"latitude\": 48.420133,\n\t\"longitude\": -123.370083,\n\t\"ground_elevation\": 1,\n\t\"drilling_method\": \"AUGER\",\n\t\"well_orientation\": \"False\",\n\t\"water_supply_system_name\": \"Pond\",\n\t\"water_supply_system_well_name\": \"1\",\n\t\"surface_seal_material\": \"BNTITE_CLY\",\n\t\"surface_seal_depth\": 1,\n\t\"surface_seal_method\": \"OTHER\",\n\t\"liner_material\": \"PVC\",\n\t\"screen_material\": \"PLASTIC\",\n\t\"development_method\": \"BAIL\",\n\t\"well_yield\": \"5.22\",\n\t\"finished_well_depth\": \"55\",\n\t\"total_depth_drilled\": \"58\",\n\t\"final_casing_stick_up\": \"3\",\n\t\"static_water_level\": \"12\",\n\t\"artesian_flow\": \"6.55\",\n\t\"well_disinfected\": \"True\",\n\t\"comments\": \"This is a well\",\n\t\"diameter\": \"3\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/submissions/construction?format=json",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"submissions",
								"construction"
							],
							"query": [
								{
									"key": "format",
									"value": "json"
								}
							]
						},
						"description": "Request a list of wells"
					},
					"response": []
				},
				{
					"name": "Submission - alteration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6956eea7-3dca-43a2-9357-0a7198a62da4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.expect(pm.response.code).to.equal(201);",
									"})",
									"",
									"pm.test(\"Well tag number to persist\", function() {",
									"    pm.expect(jsonData.well).to.equal(pm.environment.get('well_tag_number'))",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"well_activity_type\": \"ALT\",\n\t\"well\": {{well_tag_number}},\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"work_start_date\": \"2018-01-02\",\n\t\"work_end_date\": \"2018-01-02\",\n\t\"casing_set\": [\n\t\t{\n\t\t\t\"casing_code\": \"SURFACE\",\n\t\t\t\"start\":\"10\",\n\t\t\t\"end\":\"20\",\n\t\t\t\"diameter\":\"1\",\n\t\t\t\"drive_shoe\":\"False\",\n\t\t\t\"id\":0,\n\t\t\t\"wall_thickness\":\"87\"\n\t\t}\n\t],\n\t\"screen_set\": [\n        {\n            \"start\": \"10.00\",\n            \"end\": \"20.00\",\n            \"internal_diameter\": null,\n            \"assembly_type\": null,\n            \"slot_size\": null\n        }\n    ],\n    \"linerperforation_set\": [\n\t\t{\n\t\t\t\"start\": 10,\n\t\t\t\"end\": 20\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/submissions/alteration?format=json",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"submissions",
								"alteration"
							],
							"query": [
								{
									"key": "format",
									"value": "json"
								}
							]
						},
						"description": "Request a list of wells"
					},
					"response": []
				},
				{
					"name": "Check submission - well updated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f7c420c-60ea-4dc8-bb99-4fa4bd6b59b1",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.expect(pm.response.code).to.equal(200);",
									"})",
									"",
									"pm.test(\"Expect casing list to contain two entries\", function() {",
									"    pm.expect(jsonData.casing_set.length).to.equal(2);",
									"})",
									"",
									"pm.test(\"Expect screen list empty\", function() {",
									"    pm.expect(jsonData.screen_set.length).to.equal(2);",
									"})",
									"",
									"pm.test(\"Expect linerperforation to be empty\", function() {",
									"    pm.expect(jsonData.linerperforation_set.length).to.equal(2);",
									"})",
									"",
									"pm.test(\"Well status is 'NEW'\", function() {",
									"    pm.expect(jsonData.well_status).to.equal(\"ALTERATION\");",
									"})"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"wells",
								"{{well_tag_number}}"
							]
						},
						"description": "Check if the created well matched submission"
					},
					"response": []
				},
				{
					"name": "Submission - alteration - intersecting data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6956eea7-3dca-43a2-9357-0a7198a62da4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.expect(pm.response.code).to.equal(201);",
									"})",
									"",
									"pm.test(\"Well tag number to persist\", function() {",
									"    pm.expect(jsonData.well).to.equal(pm.environment.get('well_tag_number'))",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"well_activity_type\": \"ALT\",\n\t\"well\": {{well_tag_number}},\n\t\"work_start_date\": \"2018-01-03\",\n\t\"work_end_date\": \"2018-01-03\",\n\t\"casing_set\": [\n\t\t{\n\t\t\t\"casing_code\": \"SURFACE\",\n\t\t\t\"start\":\"10\",\n\t\t\t\"end\":\"15\",\n\t\t\t\"diameter\":\"1\",\n\t\t\t\"drive_shoe\":\"False\",\n\t\t\t\"id\":0,\n\t\t\t\"wall_thickness\":\"87\"\n\t\t},\n\t\t{\n\t\t\t\"casing_code\": \"SURFACE\",\n\t\t\t\"start\":\"15\",\n\t\t\t\"end\":\"20\",\n\t\t\t\"diameter\":\"1\",\n\t\t\t\"drive_shoe\":\"False\",\n\t\t\t\"id\":0,\n\t\t\t\"wall_thickness\":\"87\"\n\t\t}\n\t],\n\t\"screen_set\": [\n        {\n            \"start\": \"10.00\",\n            \"end\": \"15.00\",\n            \"internal_diameter\": null,\n            \"assembly_type\": null,\n            \"slot_size\": null\n        },\n        {\n            \"start\": \"15.00\",\n            \"end\": \"20.00\",\n            \"internal_diameter\": null,\n            \"assembly_type\": null,\n            \"slot_size\": null\n        }\n    ],\n    \"linerperforation_set\": [\n\t\t{\n\t\t\t\"start\": 10,\n\t\t\t\"end\": 15\n\t\t},\n\t\t{\n\t\t\t\"start\": 15,\n\t\t\t\"end\": 20\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/submissions/alteration?format=json",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"submissions",
								"alteration"
							],
							"query": [
								{
									"key": "format",
									"value": "json"
								}
							]
						},
						"description": "Request a list of wells"
					},
					"response": []
				},
				{
					"name": "Check submission - well stacked",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7640140-774f-4486-ac95-94a38719dd4d",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.expect(pm.response.code).to.equal(200);",
									"})",
									"",
									"pm.test(\"Expect casing list to contain two entries\", function() {",
									"    pm.expect(jsonData.casing_set.length).to.equal(3);",
									"})",
									"",
									"pm.test(\"Expect screen list empty\", function() {",
									"    pm.expect(jsonData.screen_set.length).to.equal(3);",
									"})",
									"",
									"pm.test(\"Expect linerperforation to be empty\", function() {",
									"    pm.expect(jsonData.linerperforation_set.length).to.equal(3);",
									"})"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"wells",
								"{{well_tag_number}}"
							]
						},
						"description": "Check if the created well has stacked data"
					},
					"response": []
				},
				{
					"name": "Decommission well",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b89b1daf-40de-46c1-9567-608d995d0702",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.expect(pm.response.code).to.equal(201);",
									"})",
									"",
									"pm.environment.set(\"well_tag_number\", jsonData.well);",
									"pm.environment.set('filing_number', jsonData.filing_number)",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"well_activity_type\": \"ALT\",\n\t\"well\": {{well_tag_number}},\n\t\"owner_full_name\": \"Bob\",\n\t\"owner_mailing_address\": \"123 Place\",\n\t\"owner_city\": \"Victoria\",\n\t\"owner_province_state\": \"BC\",\n\t\"work_start_date\": \"2018-01-04\",\n\t\"work_end_date\": \"2018-01-04\",\n\t\"decommission_description_set\": [\n\t\t{\n\t\t\t\"start\": 0,\n\t\t\t\"end\": 1,\n\t\t\t\"material\": \"CONCRETE\",\n\t\t\t\"observations\": \"It worked!\"\n\t\t}\n\t],\n\t\"decommission_details\": \"Test\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/submissions/decommission?format=json",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"submissions",
								"decommission"
							],
							"query": [
								{
									"key": "format",
									"value": "json"
								}
							]
						},
						"description": "Request a list of wells"
					},
					"response": []
				},
				{
					"name": "Check well - decommissioned",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f060585e-3c9b-48b2-88cd-33b26d54703b",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.expect(pm.response.code).to.equal(200);",
									"})",
									"",
									"pm.test(\"Expect casing list to contain two entries\", function() {",
									"    pm.expect(jsonData.casing_set.length).to.equal(3);",
									"})",
									"",
									"pm.test(\"Expect screen list empty\", function() {",
									"    pm.expect(jsonData.screen_set.length).to.equal(3);",
									"})",
									"",
									"pm.test(\"Expect linerperforation to be empty\", function() {",
									"    pm.expect(jsonData.linerperforation_set.length).to.equal(3);",
									"})",
									"",
									"pm.test(\"Well status is 'closure'\", function() {",
									"    pm.expect(jsonData.well_status).to.equal(\"CLOSURE\");",
									"})",
									"",
									"pm.test(\"Latitude/Longitude is same as the initial construction report\", function() {",
									"    pm.expect(jsonData.latitude).to.equal(\"48.420133\");",
									"    pm.expect(jsonData.longitude).to.equal(\"-123.370083\");",
									"})"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/v1/wells/{{well_tag_number}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"wells",
								"{{well_tag_number}}"
							]
						},
						"description": "Check if the created well has stacked data"
					},
					"response": []
				}
			]
		}
	]
}