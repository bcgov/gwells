--------------------------------------------------------
--  File created - Friday-March-10-2017   
--------------------------------------------------------
CREATE TABLE WELLS_AQUIFER_SUBTYPE_CODES 
(
  AQUIFER_SUBTYPE_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT WELLS_ASCD_PK PRIMARY KEY 
  (
    AQUIFER_SUBTYPE_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_AQUIFER_SUBTYPE_CODES IS 'AQUIFER SUBTYPE CODE specifies a standardized code which categorizes an aquifer based on how it was formed geologically (depositional description).  Understanding of how aquifers were formed governs important attributes such as their productivity, vulnerability to contamination as well as proximity and likelihood of hydraulic connection to streams. Aquifer sub-type differs from AQUIFER CLASSIFICATION in that the later system classifies aquifers based on their level of development and vulnerability. Further details on aquifer sub-types can be found in Wei et al., 2009: Streamline Watershed Management Bulletin Vol. 13;No. 1.The code value is a combination of an aquifer type represented by a number and an optional letter representing a more specific aquifer sub-type. For example aquifer sub-type code 6b is a comprised of the aquifer type number (6: Crystalline bedrock aquifers) and subtype letter (b) specifically described as: Fractured crystalline (igneous intrusive or metamorphic, meta-sedimentary, meta-volcanic, volcanic) rock aquifers. Initial code values range from 1a to 6b.'
;
CREATE TABLE GW_YIELD_ESTIMATED_MTHD_CDS 
(
  YIELD_ESTIMATED_METHOD_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_YEMC_PK PRIMARY KEY 
  (
    YIELD_ESTIMATED_METHOD_CODE 
  )
) 
;
COMMENT ON TABLE GW_YIELD_ESTIMATED_MTHD_CDS IS 'The YIELD ESTIMATED METHOD CODE is used to specify  valid methods used to estimate the yield of a well.   It provides for a standard commonly understood code and description for yield estimating methods.'
;

CREATE TABLE WELLS_ACCEPTANCE_STATUS_CODE 
(
  ACCEPTANCE_STATUS_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(100) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELLS_ACST_PK PRIMARY KEY 
  (
    ACCEPTANCE_STATUS_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_ACCEPTANCE_STATUS_CODE IS 'The ACCEPTANCE STATUS CODE is a recognizable code that represents the Acceptance Status. Some examples include NEW, PENDING, ACCEPTED, and REJECTED.'
;
CREATE TABLE WELLS_WELLS 
(
  SEQUENCE_NO BIGINT 
, WELL_ID BIGINT NOT NULL 
, DRILLER_WELL_ID BIGINT 
, LEGAL_LAND_DISTRICT_CODE VARCHAR(10) 
, AQUIFER_LITHOLOGY_CODE VARCHAR(10) 
, BCGS_ID BIGINT 
, WATERSHED_CODE VARCHAR(10) 
, YIELD_UNIT_CODE VARCHAR(10) 
, CONSTRUCTION_METHOD_CODE VARCHAR(10) 
, DRILLER_COMPANY_CODE VARCHAR(10) 
, WELL_USE_CODE VARCHAR(10) 
, OWNER_ID BIGINT 
, UTM_ACCURACY_CODE VARCHAR(10) 
, LOC_ACCURACY_CODE VARCHAR(10) 
, WELL_TAG_NUMBER DECIMAL(20, 0) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, MS_ACCESS_NUM_OF_WELL VARCHAR(10) 
, CONSTRUCTION_START_DATE TIMESTAMP(0) 
, CONSTRUCTION_END_DATE TIMESTAMP(0) 
, DATE_ENTERED TIMESTAMP(0) 
, DRILLING_METHOD_CODE VARCHAR(10) 
, RIG_NUMBER VARCHAR(10) 
, OTHER_EQUIPMENT VARCHAR(50) 
, DEPTH_WELL_DRILLED DECIMAL(7, 2) 
, CREW_HELPER_NAME VARCHAR(50) 
, DEVELOPMENT_HOURS DECIMAL(9, 2) 
, DEVELOPMENT_NOTES VARCHAR(255) 
, LITHOLOGY_MEASURMENT_UNIT VARCHAR(25) 
, OLD_WELL_NUMBER VARCHAR(10) 
, OLD_MAPSHEET VARCHAR(10) 
, CREW_DRILLER_NAME VARCHAR(50) 
, WELL_IDENTIFICATION_PLATE_NO BIGINT 
, WATER_UTILITY_FLAG VARCHAR(1) 
, SITE_ISLAND VARCHAR(50) 
, SITE_AREA VARCHAR(50) 
, SITE_STREET VARCHAR(100) 
, COORDINATE_X VARCHAR(20) 
, COORDINATE_Z VARCHAR(20) 
, COORDINATE_Y VARCHAR(20) 
, LEGAL_DISTRICT_LOT VARCHAR(20) 
, LEGAL_PLAN VARCHAR(20) 
, LOT_NUMBER VARCHAR(10) 
, LEGAL_TOWNSHIP VARCHAR(20) 
, LEGAL_SECTION VARCHAR(5) 
, LEGAL_RANGE VARCHAR(5) 
, INDIAN_RESERVE VARCHAR(10) 
, MERIDIAN VARCHAR(20) 
, LEGAL_BLOCK VARCHAR(5) 
, QUARTER VARCHAR(2) 
, LEGAL_MISCELLANEOUS VARCHAR(255) 
, ELEVATION DECIMAL(10, 2) 
, LOCATION_ACCURACY VARCHAR(2) 
, CERTIFICATION VARCHAR(10) 
, BEDROCK_DEPTH DECIMAL(7, 2) 
, DIAMETER VARCHAR(9) 
, WATER_DEPTH DECIMAL(7, 2) 
, YIELD_VALUE DECIMAL(8, 3) 
, PUMP_DESCRIPTION VARCHAR(100) 
, CHEMISTRY_LAB_DATA VARCHAR(1) 
, FIELD_LAB_DATA VARCHAR(1) 
, CHEMISTRY_SITE_ID VARCHAR(10) 
, OTHER_CHEMISTRY_DATA VARCHAR(255) 
, MINISTRY_OBSERVATION_WELL_STAT VARCHAR(25) 
, ARTESIAN_FLOW_VALUE DECIMAL(7, 2) 
, ARTESIAN_FLOW_UNIT_CODE VARCHAR(10) 
, GENERAL_REMARKS VARCHAR(255) 
, LITHOLOGY_DESCRIPTION_COUNT VARCHAR(101) 
, PERFORATION_FLAG VARCHAR(1) 
, CONSULTANT_COMPANY VARCHAR(100) 
, OWNERS_WELL_NUMBER VARCHAR(20) 
, PID BIGINT 
, GRAVEL_PACKED_FLAG VARCHAR(1) 
, FILTER_PACK_SIZE_CODE VARCHAR(10) 
, GRAVEL_PACKED_FROM DECIMAL(7, 2) 
, GRAVEL_PACKED_TO DECIMAL(7, 2) 
, SURFACE_SEAL_FLAG VARCHAR(1) 
, SURFACE_SEAL_DEPTH DECIMAL(5, 2) 
, SURFACE_SEAL_MATERIAL_CODE VARCHAR(10) 
, SURFACE_SEAL_METHOD_CODE VARCHAR(10) 
, PRODUCTION_TIDAL_FLAG VARCHAR(1) 
, PERMIT_NUMBER VARCHAR(20) 
, WELL_LOCATION VARCHAR(255) 
, TYPE_OF_WORK VARCHAR(50) 
, CONTRACTOR_WELL_PLATE_NMBR VARCHAR(50) 
, SCREEN_FLAG VARCHAR(4) 
, PUMP_FLAG VARCHAR(1) 
, GROUND_WATER_FLAG VARCHAR(1) 
, SIEVE_FLAG VARCHAR(1) 
, SITE_FLAG VARCHAR(9) 
, OTHER_FLAG VARCHAR(1) 
, UTM_ZONE_CODE VARCHAR(10) 
, UTM_NORTH INT 
, UTM_EAST INT 
, SCREEN_LENGTH VARCHAR(101) 
, SCREEN_MATERIAL_CODE VARCHAR(10) 
, SCREEN_MANUFACTURER VARCHAR(50) 
, SCREEN_TYPE_CODE VARCHAR(10) 
, SCREEN_WIRE VARCHAR(50) 
, SCREEN_INFORMATION_TEXT VARCHAR(255) 
, CONTRACTOR_INFO_1 VARCHAR(255) 
, CONTRACTOR_INFO_2 VARCHAR(255) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, LITHOLOGY_FLAG VARCHAR(1) 
, REPORTS_FLAG VARCHAR(1) 
, OTHER_INFORMATION VARCHAR(20) 
, WHO_CREATED VARCHAR(30) NOT NULL 
, INFO_OTHER VARCHAR(20) 
, INFO_SITE VARCHAR(9) 
, WELL_SEQUENCE_NO BIGINT 
, CLASS_OF_WELL_CODE VARCHAR(30) 
, SUBCLASS_OF_WELL_CODE VARCHAR(10) 
, ORIENTATION_OF_WELL_CODE VARCHAR(10) 
, STATUS_OF_WELL_CODE VARCHAR(10) DEFAULT 'New' 
, SURFACE_SEAL_THICKNESS DECIMAL(7, 2) 
, PLATE_ATTACHED_BY VARCHAR(80) 
, WHERE_PLATE_ATTACHED VARCHAR(500) 
, WATER_SUPPLY_SYSTEM_NAME VARCHAR(80) 
, WATER_SUPPLY_WELL_NAME VARCHAR(80) 
, OBSERVATION_WELL_NUMBER SMALLINT 
, LATITUDE DECIMAL(8, 6) 
, LONGITUDE DECIMAL(9, 6) 
, ACCEPTANCE_STATUS_CODE VARCHAR(10) NOT NULL 
, ACCEPTED_BY VARCHAR(30) 
, USER_GUID VARCHAR(32) 
, ARTESIAN_FLOW_VALUE_2 VARCHAR(101) 
, ARTESIAN_FLOW_UNIT_CODE_2 VARCHAR(25) 
, BEDROCK_DEPTH_2 VARCHAR(10) 
, DEPTH_WELL_DRILLED_2 VARCHAR(9) 
, DEVELOPMENT_HOURS_2 VARCHAR(7) 
, DEVELOPMENT_NOTES_2 VARCHAR(50) 
, DRILLING_METHOD_CODE_2 VARCHAR(20) 
, ELEVATION_2 VARCHAR(10) 
, FILTER_PACK_SIZE_CODE_2 VARCHAR(50) 
, GRAVEL_PACKED_FROM_2 VARCHAR(101) 
, GRAVEL_PACKED_TO_2 VARCHAR(101) 
, ORIENTATION_OF_WELL_2 VARCHAR(15) 
, PID_2 VARCHAR(10) 
, SCREEN_MATERIAL_CODE_2 VARCHAR(50) 
, SCREEN_TYPE_CODE_2 VARCHAR(50) 
, STATUS_OF_WELL_CODE_2 VARCHAR(10) 
, SUBCLASS_OF_WELL_CODE_2 VARCHAR(30) 
, SURFACE_SEAL_DEPTH_2 VARCHAR(101) 
, SURFACE_SEAL_MATERIAL_CODE_2 VARCHAR(50) 
, SURFACE_SEAL_METHOD_CODE_2 VARCHAR(50) 
, SURFACE_SEAL_THICKNESS_2 INT 
, UTM_NORTH_2 VARCHAR(8) 
, UTM_EAST_2 VARCHAR(7) 
, UTM_ZONE_CODE_2 VARCHAR(2) 
, WATER_DEPTH_2 BIGINT 
, WELL_IDENTIFICATION_PLATE_NO_2 VARCHAR(10) 
, WELL_LOCATION_2 VARCHAR(50) 
, YIELD_VALUE_2 VARCHAR(101) 
, ALTERNATIVE_SPECIFICATIONS_IND CHAR(1) DEFAULT 'N' NOT NULL 
, ALTERNATIVE_SPECS_RECEIVED_IND CHAR(1) 
, ARTESIAN_PRESSURE DECIMAL(5, 2) 
, BACKFILL_TYPE VARCHAR(250) 
, BACKFILL_DEPTH DECIMAL(7, 2) 
, BACKFILL_MATERIAL VARCHAR(100) 
, CLASS_OF_WELL_CODCLASSIFIED_BY VARCHAR(10) 
, CLOSURE_REASON VARCHAR(250) 
, CLOSURE_DETAILS VARCHAR(250) 
, CLOSURE_METHOD_CODE VARCHAR(10) 
, CONSTRUCTION_REPORT_IND CHAR(1) DEFAULT 'N' NOT NULL 
, CONSTRUCTION_REPORT_RECD_IND CHAR(1) 
, DEVELOPMENT_METHOD_CODE VARCHAR(10) 
, EXISTING_WELL_TAG_NUMBER DECIMAL(20, 0) 
, FILTER_PACK_MATERIAL_CODE VARCHAR(10) 
, FILTER_PACK_MATERIAL_THICKNESS DECIMAL(5, 3) 
, FINAL_CASING_STICK_UP DECIMAL(6, 3) 
, LINER_MATERIAL_CODE VARCHAR(10) 
, GROUND_ELEVATION_METHOD_CODE VARCHAR(10) 
, SCREEN_BOTTOM_CODE VARCHAR(10) 
, SCREEN_INTAKE_CODE VARCHAR(10) 
, SCREEN_OPENING_CODE VARCHAR(10) 
, SEALANT_MATERIAL VARCHAR(100) 
, SUBCLASS_OF_WELL_CLASSIFIED_BY VARCHAR(10) 
, TOTAL_DEPTH_DRILLED DECIMAL(7, 2) 
, TYPE_OF_WELL_CAP VARCHAR(40) 
, WATER_QUALITY_COLOUR VARCHAR(60) 
, WATER_QUALITY_ODOUR VARCHAR(60) 
, WELL_DISINFECTED_IND CHAR(1) DEFAULT 'N' NOT NULL 
, WELL_OBSERVATION_WELL_NUMBER SMALLINT 
, INTERNAL_OFFICE_COMMENTS VARCHAR(2000) 
, CAPTURE_ZONE_FLAG VARCHAR(1) DEFAULT 'N' 
, CLOSURE_START_DATE TIMESTAMP(0) 
, CLOSURE_END_DATE TIMESTAMP(0) 
, ALTERATION_START_DATE TIMESTAMP(0) 
, ALTERATION_END_DATE TIMESTAMP(0) 
, SOURCE_APPLICATION VARCHAR(10) 
, WELL_LICENCE_GENERAL_STATUS VARCHAR(20) DEFAULT 'UNLICENSED' NOT NULL 
, CONSTRAINT WELL_PK PRIMARY KEY 
  (
    WELL_ID 
  )
) 
;
CREATE TABLE GW_AQUIFER_ATTRS 
(
  AQUIFER_ID INT NOT NULL 
, AQUIFER_SUBTYPE_CODE VARCHAR(10) DEFAULT 'UNK' NOT NULL 
, ADJOINING_MAPSHEET VARCHAR(3) 
, AQUIFER_CLASSIFICATION VARCHAR(30) 
, AQUIFER_MATERIALS VARCHAR(18) 
, AQUIFER_NAME VARCHAR(60) 
, AQUIFER_RANKING_VALUE DECIMAL(25, 0) 
, DEMAND VARCHAR(9) 
, DESCRIPTIVE_LOCATION VARCHAR(42) 
, LITHO_STRATOGRAPHIC_UNIT VARCHAR(78) 
, PRODUCTIVITY VARCHAR(12) 
, QUALITY_CONCERNS VARCHAR(40) 
, QUANTITY_CONCERNS VARCHAR(40) 
, SIZE_KM2 DECIMAL(12, 1) 
, TYPE_OF_WATER_USE VARCHAR(21) 
, VULNERABILITY VARCHAR(13) 
, AQUIFER_DESCRIPTION_RPT_IND VARCHAR(1) DEFAULT 'N' NOT NULL 
, AQUIFER_STATISTICS_RPT_IND VARCHAR(1) DEFAULT 'N' NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_AQF_PK PRIMARY KEY 
  (
    AQUIFER_ID 
  )
) 
;
COMMENT ON TABLE GW_AQUIFER_ATTRS IS 'Called AQ_CLASS table in the current Implementation.Aquifer Definition: A formation, group of formations, or part of a formation that contains sufficient saturated, permeable material to yield significant quantities of water to wells and springs.'
;
CREATE TABLE GW_AQUIFER_ATTRS_OLD 
(
  AQUIFER_ID INT NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, AQUIFER_NAME VARCHAR(60) 
, AQUIFER_CLASSIFICATION VARCHAR(30) 
, AQUIFER_MATERIALS VARCHAR(18) 
, AQUIFER_RANKING_VALUE DECIMAL(25, 0) 
, ADJOINING_MAPSHEET VARCHAR(3) 
, DEMAND VARCHAR(9) 
, DESCRIPTIVE_LOCATION VARCHAR(42) 
, LITHO_STRATOGRAPHIC_UNIT VARCHAR(78) 
, PRODUCTIVITY VARCHAR(12) 
, QUALITY_CONCERNS VARCHAR(40) 
, QUANTITY_CONCERNS VARCHAR(40) 
, SIZE_KM2 DECIMAL(12, 1) 
, TYPE_OF_WATER_USE VARCHAR(21) 
, VULNERABILITY VARCHAR(13) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, AQUIFER_SUBTYPE_CODE VARCHAR(10) 
, AQUIFER_DESCRIPTION_RPT_IND VARCHAR(1) DEFAULT 'N' NOT NULL 
, AQUIFER_STATISTICS_RPT_IND VARCHAR(1) DEFAULT 'N' NOT NULL 
) 
;
COMMENT ON TABLE GW_AQUIFER_ATTRS_OLD IS 'Called AQ_CLASS table in the current Implementation.Aquifer Definition: A formation, group of formations, or part of a formation that contains sufficient saturated, permeable material to yield significant quantities of water to wells and springs.'
;

CREATE TABLE GW_AQUIFER_WELLS 
(
  AQUIFER_WELL_ID INT NOT NULL 
, AQUIFER_ID INT NOT NULL 
, WELL_ID BIGINT NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, AQUIFER_VULNERABILITY_INDEX BIGINT 
, TRANSMISSIVITY BIGINT 
, STORATIVITY DECIMAL(10, 8) 
, CONSTRAINT GW_AW_PK PRIMARY KEY 
  (
    AQUIFER_WELL_ID 
  )
) 
;

COMMENT ON TABLE GW_AQUIFER_WELLS IS 'This is a cross reference entity between WELL and AQUIFER ATTR.'
;

CREATE TABLE GW_WELL_WATER_QUALITY_XREFS 
(
  WELL_ID BIGINT NOT NULL 
, WATER_QUAL_CHARACTERISTICS_CD VARCHAR(10) NOT NULL 
, CONSTRAINT GW_WWQX_PK PRIMARY KEY 
  (
    WELL_ID 
  , WATER_QUAL_CHARACTERISTICS_CD 
  )
) 
;
CREATE TABLE GW_CASING_MATERIAL_CODES 
(
  CASING_MATERIAL_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_CAMC_PK PRIMARY KEY 
  (
    CASING_MATERIAL_CODE 
  )
) 
;
COMMENT ON TABLE GW_CASING_MATERIAL_CODES IS 'The CASING MATERIAL CODE is used to specify  valid materials used for casing a well.   It provides for a standard commonly understood code and description for casing materials.  Some examples include: Cement, Open Hole,  Plastic, Steel.  ''O'
;

CREATE TABLE WELLS_CASINGS 
(
  CASING_ID BIGINT NOT NULL 
, WELL_ID BIGINT NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, STANDARD_USED VARCHAR(100) 
, CASING_MATERIAL_CODE VARCHAR(10) 
, CASING_SIZE DECIMAL(7, 2) 
, CASING_INTERNAL_DIAMETER DECIMAL(8, 3) 
, CASING_TABLE_USED_FLAG VARCHAR(1) 
, CASING_WALL DECIMAL(6, 3) 
, CASING_TO DECIMAL(7, 2) 
, CASING_FROM DECIMAL(7, 2) 
, CASING_TOTAL_LENGTH DECIMAL(7, 2) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CASING_DRIVE_SHOE_IND CHAR(1) 
, CONSTRAINT CSNG_PK PRIMARY KEY 
  (
    CASING_ID 
  )
) 
;
CREATE TABLE GW_CLOSURE_METHOD_CODES 
(
  CLOSURE_METHOD_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_CLMC_PK PRIMARY KEY 
  (
    CLOSURE_METHOD_CODE 
  )
) 
;
COMMENT ON TABLE GW_CLOSURE_METHOD_CODES IS 'The CLOSURE METHOD CODE is used to specify  valid methods used to close a well.   It provides for a standard commonly understood code and description for closure methods. Current examples include: Poured and Pumped.'
;

CREATE TABLE GW_DEVELOPMENT_METHOD_CDS 
(
  DEVELOPMENT_METHOD_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_DVMC_PK PRIMARY KEY 
  (
    DEVELOPMENT_METHOD_CODE 
  )
) 
;
COMMENT ON TABLE GW_DEVELOPMENT_METHOD_CDS IS 'The DEVELOPMENT METHOD CODE is used to specify  valid methods used to develop a well.   It provides for a standard commonly understood code and description for well development methods.'
;

CREATE TABLE GW_DRILLING_METHOD_CODES 
(
  DRILLING_METHOD_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_DRMC_PK PRIMARY KEY 
  (
    DRILLING_METHOD_CODE 
  )
) 
;
COMMENT ON TABLE GW_DRILLING_METHOD_CODES IS 'The DRILLING METHOD CODE is used to specify  valid methods used to drill a well.   It provides for a standard commonly understood code and description for well drilling methods.   These methods are usually related to the type of equipment used to drill the well.'
;

CREATE TABLE GW_FILTER_PACK_MATERIAL_CDS 
(
  FILTER_PACK_MATERIAL_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_FPMC_PK PRIMARY KEY 
  (
    FILTER_PACK_MATERIAL_CODE 
  )
) 
;
COMMENT ON TABLE GW_FILTER_PACK_MATERIAL_CDS IS 'The FILTER PACK MATERIAL CODE is used to specify  valid materials used to pack the filter of a well.  It provides for a standard commonly understood code and description for filter pack materials.'
;

CREATE TABLE GW_FILTER_PACK_SIZE_CODES 
(
  FILTER_PACK_SIZE_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_FPSC_PK PRIMARY KEY 
  (
    FILTER_PACK_SIZE_CODE 
  )
) 
;
COMMENT ON TABLE GW_FILTER_PACK_SIZE_CODES IS 'The FILTER PACK SIZE CODE is used to specify  valid sizes of material used to pack the filter of a well.  It provides for a standard commonly understood code and description for filter pack sizes.'
;

CREATE TABLE GW_GROUND_ELEVATON_MTHD_CDS 
(
  GROUND_ELEVATION_METHOD_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_GEMC_PK PRIMARY KEY 
  (
    GROUND_ELEVATION_METHOD_CODE 
  )
) 
;
COMMENT ON TABLE GW_GROUND_ELEVATON_MTHD_CDS IS 'The GROUND ELEVATION METHOD CODE is used to specify  valid methods used to determine the ground elevation of a well.   It provides for a standard commonly understood code and description for methods used to determine ground elevation.'
;

CREATE TABLE GW_LINER_MATERIAL_CODES 
(
  LINER_MATERIAL_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_LMC_PK PRIMARY KEY 
  (
    LINER_MATERIAL_CODE 
  )
) 
;
COMMENT ON TABLE GW_LINER_MATERIAL_CODES IS 'The LINER MATERIAL CODE is used to specify  valid materials used for lining a well.   It provides for a standard commonly understood code and description for liner materials.  Some examples include: Pvc, Other.'
;

CREATE TABLE GW_NTS_MAPSHEETS 
(
  NTS_MAPSHEET_ID BIGINT NOT NULL 
, AQUIFER_ID INT NOT NULL 
, NTS_MAP_NUMBER VARCHAR(10) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, NTS_MAP_NAME VARCHAR(30) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_NTM_PK PRIMARY KEY 
  (
    NTS_MAPSHEET_ID 
  )
) 
;
CREATE TABLE GW_ORIENTATION_OF_WELL_CDS 
(
  ORIENTATION_OF_WELL_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_OWC_PK PRIMARY KEY 
  (
    ORIENTATION_OF_WELL_CODE 
  )
) 
;
COMMENT ON TABLE GW_ORIENTATION_OF_WELL_CDS IS 'The ORIENTATION OF WELL CODE is used to specify  valid orientations for a well.   It provides for a standard commonly understood code and description for well orientations as defined in the Groundwater Protection Regulation of the Water Act'
;

CREATE TABLE GW_PROVINCE_STATE_CODES 
(
  PROVINCE_STATE_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_PSC_PK PRIMARY KEY 
  (
    PROVINCE_STATE_CODE 
  )
) 
;
COMMENT ON TABLE GW_PROVINCE_STATE_CODES IS 'The PROVINCE STATE CODE is used to specify  valid provinces or states for the address of the owner of a well.   It provides for a standard commonly understood code and description for provinces and states.   Some examples include: BC, AB, W'
;

CREATE TABLE GW_RELATIVE_HARDNESS_CODES 
(
  RELATIVE_HARDNESS_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_RHC_PK PRIMARY KEY 
  (
    RELATIVE_HARDNESS_CODE 
  )
) 
;
COMMENT ON TABLE GW_RELATIVE_HARDNESS_CODES IS 'The RELATIVE HARDNESS CODE is used to specify  valid values that can be used to represent the hardness of the soil and subsurface material that a well is drilled into (the lithology).   It provides for a standard commonly understood code an'
;

CREATE TABLE GW_SCREEN_ASSEMBLY_TYPE_CDS 
(
  SCREEN_ASSEMBLY_TYPE_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_SATC_PK PRIMARY KEY 
  (
    SCREEN_ASSEMBLY_TYPE_CODE 
  )
) 
;
COMMENT ON TABLE GW_SCREEN_ASSEMBLY_TYPE_CDS IS 'The SCREEN ASSEMBLY TYPE CODE is used to specify  valid categories for screen assemblies.  It provides for a standard commonly understood code and description for screen assembly types.'
;

CREATE TABLE GW_SCREEN_BOTTOM_CODES 
(
  SCREEN_BOTTOM_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_SBC_PK PRIMARY KEY 
  (
    SCREEN_BOTTOM_CODE 
  )
) 
;
COMMENT ON TABLE GW_SCREEN_BOTTOM_CODES IS 'The SCREEN BOTTOM CODE is used to specify  valid categories used to identify the type of bottom on a well screen.  It provides for a standard commonly understood code and description for screen bottoms.  Some examples include: Bail, Plate,'
;

CREATE TABLE GW_SCREEN_INTAKE_CODES 
(
  SCREEN_INTAKE_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_SIC_PK PRIMARY KEY 
  (
    SCREEN_INTAKE_CODE 
  )
) 
;
COMMENT ON TABLE GW_SCREEN_INTAKE_CODES IS 'The SCREEN INTAKE CODE is used to specify  valid categories used to identify the type of intake mechanism for a well screen.  It provides for a standard commonly understood code and description for screen intake codes.  Some examples includ'
;

CREATE TABLE GW_SCREEN_MATERIAL_CODES 
(
  SCREEN_MATERIAL_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_SMC_PK PRIMARY KEY 
  (
    SCREEN_MATERIAL_CODE 
  )
) 
;
COMMENT ON TABLE GW_SCREEN_MATERIAL_CODES IS 'The SCREEN MATERIAL CODE is used to specify  valid materials that are used to construct the screen for a well.  It provides for a standard commonly understood code and description for screen material codes.  Some examples include: Plastic,'
;

CREATE TABLE GW_SCREEN_OPENING_CODES 
(
  SCREEN_OPENING_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_SOC_PK PRIMARY KEY 
  (
    SCREEN_OPENING_CODE 
  )
) 
;
COMMENT ON TABLE GW_SCREEN_OPENING_CODES IS 'The SCREEN OPENING CODE is used to specify  valid categories used to identify the type of opening on a well screen.  It provides for a standard commonly understood code and description for screen openings.  Some examples include: Continuous'
;

CREATE TABLE GW_SCREEN_TYPE_CODES 
(
  SCREEN_TYPE_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_STC_PK PRIMARY KEY 
  (
    SCREEN_TYPE_CODE 
  )
) 
;
COMMENT ON TABLE GW_SCREEN_TYPE_CODES IS 'The SCREEN TYPE CODE is used to specify  valid categories for well screens.  It provides for a standard commonly understood code and description for screen types.  Some examples include: Pipe size, Telescope.'
;

CREATE TABLE GW_STATUS_OF_WELL_CODES 
(
  STATUS_OF_WELL_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_SWC_PK PRIMARY KEY 
  (
    STATUS_OF_WELL_CODE 
  )
) 
;
COMMENT ON TABLE GW_STATUS_OF_WELL_CODES IS 'The SCREEN TYPE CODE is used to specify  valid categories for well screens.  It provides for a standard commonly understood code and description for screen types.  Some examples include: Pipe size, Telescope.'
;

CREATE TABLE GW_SUBCLASS_OF_WELL_CODES 
(
  SUBCLASS_OF_WELL_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_SWLC_PK PRIMARY KEY 
  (
    SUBCLASS_OF_WELL_CODE 
  )
) 
;
COMMENT ON TABLE GW_SUBCLASS_OF_WELL_CODES IS 'The SUBCLASS OF WELL CODE is used to specify  valid methods used to classify a well within the main classification (CLASS OF WELL CODE).   It provides for a standard commonly understood code and description for well sub-classifcation as def'
;

CREATE TABLE GW_SURFACE_SEAL_MATERIL_CDS 
(
  SURFACE_SEAL_MATERIAL_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_SSMC_PK PRIMARY KEY 
  (
    SURFACE_SEAL_MATERIAL_CODE 
  )
) 
;
COMMENT ON TABLE GW_SURFACE_SEAL_MATERIL_CDS IS 'The SURFACE SEAL MATERIAL CODE is used to specify  valid materials used for creating the surface seal for a well.   It provides for a standard commonly understood code and description for surface seal materials.  Some examples include: Bentonite clay, Concrete grout, Sand cement grout.  ''Other'' can also be specified.A surface seal is plug that prevents surface runoff (ie. Rain) from getting into the aquifer or well and contaminating the water.'
;

CREATE TABLE GW_SURFACE_SEAL_METHOD_CDS 
(
  SURFACE_SEAL_METHOD_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_SSMT_PK PRIMARY KEY 
  (
    SURFACE_SEAL_METHOD_CODE 
  )
) 
;
COMMENT ON TABLE GW_SURFACE_SEAL_METHOD_CDS IS 'The SURFACE SEAL METHOD CODE is used to specify  valid methods used to create the surface seal for a well.   It provides for a standard commonly understood code and description for surface seal methods.   Some examples include: Poured, Pumped.This is also known as Installation Method Code.'
;

CREATE TABLE GW_UTM_ZONE_CODES 
(
  UTM_ZONE_CODE VARCHAR(2) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_UZC_PK PRIMARY KEY 
  (
    UTM_ZONE_CODE 
  )
) 
;
COMMENT ON TABLE GW_UTM_ZONE_CODES IS 'The UTM ZONE CODE is used to specify valid Univeral Transverse Mercator (UTM) zone coordinates which can be used in the location specification for a well.  It provides the list of standard commonly understood codes and descriptions for UTM'
;

CREATE TABLE WELLS_AQUIFER_LITHOLOGY_CODES 
(
  AQUIFER_LITHOLOGY_CODE VARCHAR(10) NOT NULL 
, AQUIFER_LITHOLOGY_NAME VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_LICD_PK PRIMARY KEY 
  (
    AQUIFER_LITHOLOGY_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_AQUIFER_LITHOLOGY_CODES IS 'Code table used to describe the lithology of a well.  Examples incude UnconsolidatedBedrock.'
;


CREATE TABLE WELLS_BCGS_NUMBERS 
(
  BCGS_ID BIGINT NOT NULL 
, BCGS_NUMBER VARCHAR(20) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT WELL_NMB_PK PRIMARY KEY 
  (
    BCGS_ID 
  )
) 
;
COMMENT ON TABLE WELLS_BCGS_NUMBERS IS 'Manages the assignment of BCGS number to new WELL records.'
;
CREATE TABLE WELLS_CONSTR_METHOD_CODES 
(
  CONSTRUCTION_METHOD_CODE VARCHAR(10) NOT NULL 
, CONSTRUCTION_METHOD_NAME VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_CNCD_PK PRIMARY KEY 
  (
    CONSTRUCTION_METHOD_CODE 
  )
) 
;

COMMENT ON TABLE WELLS_CONSTR_METHOD_CODES IS 'The WELL CONSTRUCTION METHOD is the method of drilling the Well.The construction methods are : DUG, DRILLED, DRIVING, JETTING, SPRING or OTHER.'
;

CREATE TABLE WELLS_DRILLER_CODES 
(
  DRILLER_COMPANY_CODE VARCHAR(10) NOT NULL 
, DRILLER_COMPANY_NAME VARCHAR(255) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, STATUS_FLAG VARCHAR(1) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_DRCD_PK PRIMARY KEY 
  (
    DRILLER_COMPANY_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_DRILLER_CODES IS 'Code table to enable a fast lookup of active;inactive well drillers.'
;

CREATE TABLE WELLS_ERRORS 
(
  ERROR_ID BIGINT NOT NULL 
, TABLE_NAME VARCHAR(25) 
, ERROR_TEXT VARCHAR(2000) 
, CONSTRAINT WELL_ERR_PK PRIMARY KEY 
  (
    ERROR_ID 
  )
) 
;
COMMENT ON TABLE WELLS_CASINGS IS 'Well casing information, may or may not include a well liner.'
;

CREATE TABLE GW_WATER_QUAL_CHRCTRSTC_CDS 
(
  WATER_QUAL_CHARACTERISTICS_CD VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_WQCC_PK PRIMARY KEY 
  (
    WATER_QUAL_CHARACTERISTICS_CD 
  )
) 
;
COMMENT ON TABLE GW_WATER_QUAL_CHRCTRSTC_CDS IS 'The WATER QUALITY CHARACTERISTICS CODE is used to specify the valid values that can be used to indicate the quality of the water for a well.   It provides for a standard commonly understood code and description for water quality characteristics.  Some examples include: Clear, Cloudy, Fresh, Gas, Salty, Sediment.'
;

CREATE TABLE WELLS_CONSTANT 
(
  CODE_NAME VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, VALUE VARCHAR(255) 
, CONSTRAINT WELL_CONST_PK PRIMARY KEY 
  (
    CODE_NAME 
  )
) 
;
COMMENT ON TABLE WELLS_CONSTANT IS 'To hold constant values for the Water Well Application.  Code table names for examplewould be consiered a constant value.'
;


CREATE TABLE GW_CLASS_OF_WELL_CODES 
(
  CLASS_OF_WELL_CODE VARCHAR(10) NOT NULL 
, DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG CHAR(1) NOT NULL 
, SORT_ORDER INT DEFAULT 100 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT GW_CLWC_PK PRIMARY KEY 
  (
    CLASS_OF_WELL_CODE 
  )
) 
;
COMMENT ON TABLE GW_CLASS_OF_WELL_CODES IS 'The CLASS OF WELL CODE is used to specify  valid methods used to classify a well.   It provides for a standard commonly understood code and description for well classifcation as defined in the Groundwater Protection Regulation of the Water Act'
;

CREATE TABLE GW_CLASS_SUBCLASS_XREFS 
(
  CLASS_OF_WELL_CODE VARCHAR(10) NOT NULL 
, SUBCLASS_OF_WELL_CODE VARCHAR(10) NOT NULL 
, CONSTRAINT GW_CSC_PK PRIMARY KEY 
  (
    CLASS_OF_WELL_CODE 
  , SUBCLASS_OF_WELL_CODE 
  )
) 
;


COMMENT ON TABLE GW_NTS_MAPSHEETS IS 'NTS (National Topographical System) map sheet.The map sheets are at a 1:50,000 scale where a specific aquifer islocated.  This way you can find what (if any)aquifers have been delineatedwhen calling up a specific mapsheet and after you do, you will be informedif it extends beyond the map sheet that you are looking at.An aquifer may be fully contained in a single map sheet of may span multiple map sheets.A single map sheet may contain multiple aquifers.'
;




COMMENT ON TABLE WELLS_ERRORS IS 'Stores errors captured in the upload process for well data.'
;

CREATE TABLE WELLS_GROUND_WATER_AUTHRZATION 
(
  AUTHORIZATION_NUMBER VARCHAR(12) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_UPDATED TIMESTAMP(0) 
, WHO_UPDATED VARCHAR(30) 
, CONSTRAINT WELL_GWA_PK PRIMARY KEY 
  (
    AUTHORIZATION_NUMBER 
  )
) 
;

CREATE TABLE WELLS_LEGAL_LAND_DIST_CODES 
(
  LEGAL_LAND_DISTRICT_CODE VARCHAR(10) NOT NULL 
, LEGAL_LAND_DISTRICT_NAME VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_DCD_PK PRIMARY KEY 
  (
    LEGAL_LAND_DISTRICT_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_LEGAL_LAND_DIST_CODES IS 'LEGAL LAND DIST CODE is a lookup for Land District codes. This is not the offical Tanatlis Land district table for codes TA_LAND_DISTRICTS and is to be used with discretion, until the offical table can be incorporated into the application'
;

CREATE TABLE WELLS_LITH_DESCRIPTION_CODES 
(
  LITHOLOGY_CODE VARCHAR(10) NOT NULL 
, LITHOLOGY_DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_DSCD_PK PRIMARY KEY 
  (
    LITHOLOGY_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_LITH_DESCRIPTION_CODES IS 'Description code, enable reuse of lithology descriptions.'
;

CREATE TABLE WELLS_LITHOLOGY_COLOUR_CODES 
(
  LITHOLOGY_COLOUR_CODE VARCHAR(10) NOT NULL 
, LITHOLOGY_COLOUR_DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_LTCL_PK PRIMARY KEY 
  (
    LITHOLOGY_COLOUR_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_LITHOLOGY_COLOUR_CODES IS 'Colour code descriptions, can be complex descriptions to identify mineral and other soil characteristics.'
;

CREATE TABLE WELLS_YIELD_UNIT_CODES 
(
  YIELD_UNIT_CODE VARCHAR(10) NOT NULL 
, YIELD_UNIT_DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_YECD_PK PRIMARY KEY 
  (
    YIELD_UNIT_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_YIELD_UNIT_CODES IS 'Pumping test and well capacity data: Pumping test data are only available for a small percentage of wells, typically some community wells. These data provide information on well performance that is necessary for calculating well capacity and for selecting pumps for water supply projects.  Pumping test data also provide information on the permeability of the aquifer.  Permeability information is used to estimate the aquifer''s sustained yield and flow rate.'
;

CREATE TABLE WELLS_LITHOLOGY_MATERIAL_CODES 
(
  LITHOLOGY_MATERIAL_CODE VARCHAR(10) NOT NULL 
, LITHOLOGY_MATERIAL_DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_MTCD_PK PRIMARY KEY 
  (
    LITHOLOGY_MATERIAL_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_LITHOLOGY_MATERIAL_CODES IS 'Lithology material description.'
;


CREATE TABLE WELLS_LITHOLOGY_DESCRIPTIONS 
(
  LITHOLOGY_DESCRIPTION_ID BIGINT NOT NULL 
, LITHOLOGY_CODE VARCHAR(10) 
, WELL_ID BIGINT NOT NULL 
, LITHOLOGY_COLOUR_CODE VARCHAR(10) 
, LITHOLOGY_MATERIAL_CODE VARCHAR(10) 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, LITHOLOGY_SEQUENCE_NUMBER BIGINT 
, LITHOLOGY_FROM DECIMAL(7, 2) 
, LITHOLOGY_TO DECIMAL(7, 2) 
, LITHOLOGY_RAW_DATA VARCHAR(100) 
, LITHOLOGY_MEASURE_UNIT VARCHAR(10) 
, OVERBURDEN_DEPTH DECIMAL(9, 2) 
, BEDROCK_DEPTH DECIMAL(9, 2) 
, TOTAL_DEPTH DECIMAL(9, 2) 
, LITHOLOGY VARCHAR(100) 
, WHEN_UPDATED TIMESTAMP(0) 
, WHO_UPDATED VARCHAR(30) 
, LITHOLOGY_EDITED_DATA VARCHAR(100) 
, WATER_BEARING_ESTIMATED_FLOW DECIMAL(10, 4) 
, LITHOLOGY_OBSERVATION VARCHAR(250) 
, RELATIVE_HARDNESS_CODE VARCHAR(10) 
, WATER_BEARING_EST_FLW_UNT_CD VARCHAR(10) 
, CONSTRAINT WELL_LIDS_PK PRIMARY KEY 
  (
    LITHOLOGY_DESCRIPTION_ID 
  )
) 
;



COMMENT ON TABLE WELLS_LITHOLOGY_DESCRIPTIONS IS 'The LITHOLOGY DESCRIPTION indicates the soils and subsurface materials that the well is constructed into. Examples: clay, silt, sand, gravel, and boulders.'
;
CREATE TABLE WELLS_LOCATION_ACCURACY_CODE 
(
  LOC_ACCURACY_CODE VARCHAR(10) NOT NULL 
, LOC_ACCURACY_DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_LOCN_PK PRIMARY KEY 
  (
    LOC_ACCURACY_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_LOCATION_ACCURACY_CODE IS 'Is a table with attributes defining the quality of a particular well.'
;

CREATE TABLE WELLS_OWNERS 
(
  OWNER_ID BIGINT NOT NULL 
, SURNAME VARCHAR(100) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, GIVEN_NAME VARCHAR(100) 
, CITY VARCHAR(100) 
, STREET_NAME VARCHAR(100) 
, STREET_NUMBER VARCHAR(10) 
, POSTAL_CODE VARCHAR(10) 
, PHONE_NUMBER VARCHAR(25) 
, ADDRESS_LINE VARCHAR(100) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, EMAIL_ADDRESS VARCHAR(80) 
, PROVINCE_STATE_CODE VARCHAR(10) 
, CONSTRAINT WELL_OWNR_PK PRIMARY KEY 
  (
    OWNER_ID 
  )
) 
;
COMMENT ON TABLE WELLS_OWNERS IS 'Well owner information.'
;

CREATE TABLE WELLS_PERFORATIONS 
(
  PERFORATION_ID BIGINT NOT NULL 
, WELL_ID BIGINT NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, LINER_FROM DECIMAL(7, 2) 
, LINER_TO DECIMAL(7, 2) 
, LINER_DIAMETER DECIMAL(7, 2) 
, PERFORATION_MISC VARCHAR(255) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, LINER_THICKNESS DECIMAL(5, 3) 
, LINER_PERFORATION_FROM DECIMAL(7, 2) 
, LINER_PERFORATION_TO DECIMAL(7, 2) 
, CONSTRAINT WELL_PFRT_PK PRIMARY KEY 
  (
    PERFORATION_ID 
  )
) 
;
COMMENT ON TABLE WELLS_PERFORATIONS IS 'Well Perforation (holes made in the WELL liner to draw water) details.'
;

CREATE TABLE WELLS_PRODUCTION_DATA 
(
  PRODUCTION_ID BIGINT NOT NULL 
, WELL_ID BIGINT NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, STATIC_LEVEL DECIMAL(7, 2) 
, TIDAL_FLAG VARCHAR(1) 
, YIELD_ESTIMATED_METHOD_CODE VARCHAR(10) 
, TEST_RATE DECIMAL(7, 2) 
, TEST_RATE_UNITS_CODE VARCHAR(10) 
, TEST_DURATION DECIMAL(9, 2) 
, NET_DRAWDOWN DECIMAL(7, 2) 
, RECOMMENDED_PUMP_DEPTH DECIMAL(7, 2) 
, RECOMMENDED_PUMP_RATE DECIMAL(7, 2) 
, MAX_OUT_FEET DECIMAL(7, 2) 
, MAX_OUT_GPH DECIMAL(7, 2) 
, MAX_OUT_GPM DECIMAL(7, 2) 
, PUMP_GALLONS DECIMAL(7, 2) 
, PUMP_SETTING VARCHAR(15) 
, PUMP_SETTING_FROM VARCHAR(15) 
, PUMP_SETTING_GPMH DECIMAL(7, 2) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT PRDT_PK PRIMARY KEY 
  (
    PRODUCTION_ID 
  )
) 
;

COMMENT ON TABLE WELLS_PRODUCTION_DATA IS 'Production (start of water production) data gathered at time of drilling. Production in this sense means "making the well produce water" the data is the associated with the effort to make the well "produce".'
;

CREATE TABLE WELLS_SCREENS 
(
  SCREEN_ID BIGINT NOT NULL 
, WELL_ID BIGINT NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, SCREEN_INTERNAL_DIAMETER DECIMAL(7, 2) 
, SCREEN_SLOT_SIZE DECIMAL(7, 2) 
, SCREEN_FROM DECIMAL(7, 2) 
, SCREEN_TO DECIMAL(7, 2) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SCREEN_ASSEMBLY_TYPE_CODE VARCHAR(10) 
, CONSTRAINT SCRN_PK PRIMARY KEY 
  (
    SCREEN_ID 
  )
) 
;

COMMENT ON TABLE WELLS_SCREENS IS 'Water WELL screen filter information.'
;

CREATE TABLE WELLS_SEQUENCES 
(
  SEQUENCE_ID BIGINT NOT NULL 
, NEXT_SEQUENCE_NUMBER BIGINT NOT NULL 
, BCGS_MAP_NUMBER VARCHAR(20) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, CONSTRAINT WELL_SEQ_PK PRIMARY KEY 
  (
    SEQUENCE_ID 
  )
) 
;
COMMENT ON TABLE WELLS_SEQUENCES IS 'Well sequence number uniquely identifies a well within a mapsheet. The numberscheme is less cumbersome than "well tag number" and is used in the physical filing of hardcopy well information.'
;


CREATE TABLE WELLS_TEMP_ACCESS 
(
  TEMP_ACCESS_ID BIGINT NOT NULL 
, WELL_ID BIGINT NOT NULL 
, WELL_TAG_NO VARCHAR(12) 
, SURNAME VARCHAR(100) 
, GIVEN_NAME VARCHAR(100) 
, STREET_NO VARCHAR(100) 
, STREET_NAME VARCHAR(100) 
, ADDRESS_LINE2 VARCHAR(100) 
, CONSULTANT_COMPANY VARCHAR(255) 
, WELL_LOCATION VARCHAR(255) 
, WL_LOT VARCHAR(100) 
, WL_PL VARCHAR(100) 
, WL_DR VARCHAR(100) 
, SECTION VARCHAR(100) 
, TOWNSHIP VARCHAR(100) 
, TMP_ACCESS_RANGE VARCHAR(100) 
, LATITUDE DECIMAL(8, 6) 
, LONGITUDE DECIMAL(9, 6) 
, PROPOSED_USE VARCHAR(7) 
, NUM_OF_WELL VARCHAR(10) 
, TYPE_OF_WORK VARCHAR(100) 
, TYPE_OF_RIG VARCHAR(100) 
, PID VARCHAR(10) 
, LAND_DISTRICT VARCHAR(255) 
, BLOCK VARCHAR(255) 
, LEGAL_MISC VARCHAR(255) 
, DIAMETER VARCHAR(10) 
, DRILLED VARCHAR(10) 
, DEPTH VARCHAR(10) 
, LINER_FROM VARCHAR(10) 
, LINER_TO VARCHAR(10) 
, LINER_DIAMETER VARCHAR(10) 
, CASING_MATERIAL VARCHAR(255) 
, STANDARD_USED VARCHAR(255) 
, CASING_SIZE VARCHAR(10) 
, CASING_DIAMETER VARCHAR(10) 
, CASING_WALL VARCHAR(10) 
, CASING_FROM VARCHAR(10) 
, CASING_TO VARCHAR(10) 
, CASING_TOTAL_LENGTH VARCHAR(10) 
, CASING_MATERIAL2 VARCHAR(100) 
, STANDARD_USED2 VARCHAR(100) 
, CASING_SIZE2 VARCHAR(100) 
, CASING_DIAMETER2 VARCHAR(10) 
, CASING_WALL2 VARCHAR(10) 
, CASING_FROM2 VARCHAR(10) 
, CASING_TO2 VARCHAR(10) 
, CASING_TOTAL_LENGTH2 VARCHAR(10) 
, PERFORATION_FLAG VARCHAR(2) 
, PERFORATION_MISC1 VARCHAR(255) 
, PERFORATION_MISC2 VARCHAR(255) 
, PERFORATION_MISC3 VARCHAR(255) 
, PERFORATION_MISC4 VARCHAR(255) 
, SCREEN_FLAG VARCHAR(4) 
, SCREEN_MATERIAL VARCHAR(50) 
, SCREEN_MANUFACTURE VARCHAR(50) 
, SCREEN_TYPE VARCHAR(50) 
, SCREEN_WIRE VARCHAR(50) 
, SCREEN_INTERNAL_DIAMETER_1 VARCHAR(10) 
, SCREEN_INTERNAL_DIAMETER_2 VARCHAR(10) 
, SCREEN_SLOT_1 VARCHAR(10) 
, SCREEN_SLOT_2 VARCHAR(10) 
, SCREEN_SLOT_SIZE_FROM_1 VARCHAR(10) 
, SCREEN_SLOT_SIZE_TO_1 VARCHAR(10) 
, SCREEN_SLOT_SIZE_FROM_2 VARCHAR(10) 
, SCREEN_SLOT_SIZE_TO_2 VARCHAR(10) 
, SCREEN_LENGTH VARCHAR(10) 
, GRAVEL_PACKED_FLAG VARCHAR(2) 
, GRAVEL_PACKED_SIZE VARCHAR(10) 
, GRAVEL_PACKED_FROM VARCHAR(10) 
, GRAVEL_PACKED_TO VARCHAR(10) 
, SURFACE_SEAL_FLAG VARCHAR(2) 
, SURFACE_SEAL_DEPTH VARCHAR(10) 
, SURFACE_SEAL_MATERIAL VARCHAR(100) 
, SURACE_SEAL_METHOD VARCHAR(100) 
, PRODUCTION_STATIC_LEVEL VARCHAR(10) 
, PRODUCTION_TIDAL_FLAG VARCHAR(2) 
, PRODUCTION_MAX_OUT_TEST VARCHAR(10) 
, PRODUCTION_MAX_OUT_GPM VARCHAR(10) 
, PRODUCTION_MAX_OUT_GPH VARCHAR(10) 
, PRODUCTION_MAX_OUT_FEET VARCHAR(10) 
, PRODUCTION_PUMP_SETTING VARCHAR(10) 
, PRODUCTION_PUMP_SETTING_FROM VARCHAR(100) 
, PRODUCTION_PUMP_GALLONS VARCHAR(10) 
, PRODUCTION_PUMP_SETTING_GPMH VARCHAR(10) 
, STARTED_DATE VARCHAR(25) 
, COMPLETE_DATE VARCHAR(25) 
, RIG_NO VARCHAR(10) 
, OTHER_EQUIPMENT VARCHAR(255) 
, OVERBURDEN VARCHAR(10) 
, BEDROCK VARCHAR(12) 
, TOTAL_DEPTH VARCHAR(12) 
, DRILLER VARCHAR(100) 
, HELPER VARCHAR(100) 
, DEVELOPMENT_TOTAL VARCHAR(10) 
, DEVELOPMENT_NOTES VARCHAR(255) 
, GENERAL_REMARKS VARCHAR(255) 
, CONTRACTOR_WELL_PLATE_NO VARCHAR(10) 
, LITHOLOGY_MEASURE_UNIT VARCHAR(10) 
, EXPORT_FLAG VARCHAR(2) 
, YIELD_VALUE VARCHAR(10) 
, YIELD_UNITS VARCHAR(10) 
, BCGS_NO VARCHAR(20) 
, SEQUENCE_NO VARCHAR(10) 
, CONSTRAINT WELL_TMP_ACCESS_PK PRIMARY KEY 
  (
    TEMP_ACCESS_ID 
  )
) 
;
COMMENT ON TABLE WELLS_TEMP_ACCESS IS 'Temporary table for importing and exporting WELLS WELL data to and from Microsoft Access compatible comma seperated file WELL.TXT.'
;

CREATE TABLE WELLS_TEMP_ACCESS_CONTRACTORS 
(
  TEMP_ACCESS_CONTRACTOR_ID BIGINT NOT NULL 
, CONTRACTOR_NAME VARCHAR(60) 
, INFO1 VARCHAR(60) 
, INFO2 VARCHAR(60) 
, CONSTRAINT WELL_TMP_CON_PK PRIMARY KEY 
  (
    TEMP_ACCESS_CONTRACTOR_ID 
  )
) 
;
COMMENT ON TABLE WELLS_TEMP_ACCESS_CONTRACTORS IS 'Temporary table for importing and exporting WELL contractor data to and from Microsoft Access compatible comma seperated file CONTRACTOR.TXT.'
;


CREATE TABLE WELLS_TEMP_ACCESS_LITHOLOGY 
(
  TEMP_ACCESS_LITHOLGY_ID BIGINT NOT NULL 
, WELL_ID BIGINT 
, TMP_LITH_FROM BIGINT 
, TMP_LITH_TO BIGINT 
, LITHOLOGY VARCHAR(255) 
, CONSTRAINT WELL_TMP_LITH_PK PRIMARY KEY 
  (
    TEMP_ACCESS_LITHOLGY_ID 
  )
) 
;
COMMENT ON TABLE WELLS_TEMP_ACCESS_LITHOLOGY IS 'Temporary table for importing and exporting WELL Lithology data to and from Microsoft Access compatible comma seperated file LITHOLGY.TXT (Note this not a typo i.e. LITHOLOGYl, the MS-Access text file is named this).'
;

CREATE TABLE WELLS_USE_CODES 
(
  WELL_USE_CODE VARCHAR(10) NOT NULL 
, WELL_USE_NAME VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_USCD_PK PRIMARY KEY 
  (
    WELL_USE_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_USE_CODES IS 'Code table with selections representing the purpose for the  well.'
;


CREATE TABLE WELLS_UTM_DESCRIPTION 
(
  UTM_DESCRIPTION_ID BIGINT NOT NULL 
, WELL_TAG_NUMBER VARCHAR(10) NOT NULL 
, UTM_ZONE SMALLINT NOT NULL 
, UTM_NORTH INT 
, UTM_EAST INT 
, CONSTRAINT WELL_UMCD_PK PRIMARY KEY 
  (
    UTM_DESCRIPTION_ID 
  )
) 
;
COMMENT ON TABLE WELLS_UTM_DESCRIPTION IS 'Univeral Transverse Mercator (UTM) coordinates used to indentify zone where well is located location. UTM Provides a constant distance relationship anywhere on a map.  BC contains 4 UTM zones these are  8,9,10 and 11.Every 8 degrees. This code table supports the manual additon of UTM values to a Well record.'
;

CREATE TABLE WELLS_UTM_SCALE_CODES 
(
  UTM_ACCURACY_CODE VARCHAR(10) NOT NULL 
, UTM_ACCURACY_DESCRIPTION VARCHAR(255) NOT NULL 
, STATUS_FLAG VARCHAR(1) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WELL_USC_PK PRIMARY KEY 
  (
    UTM_ACCURACY_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_UTM_SCALE_CODES IS 'Estimate UTM Accuracy'
;

CREATE TABLE WELLS_WATERSHED_CODES 
(
  WATERSHED_CODE VARCHAR(10) NOT NULL 
, WATERSHED_DESCRIPTION VARCHAR(255) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, STATUS_FLAG VARCHAR(1) 
, WHO_UPDATED VARCHAR(30) 
, WHEN_UPDATED TIMESTAMP(0) 
, SORT_ORDER INT DEFAULT 100 
, CONSTRAINT WTSH_PK PRIMARY KEY 
  (
    WATERSHED_CODE 
  )
) 
;
COMMENT ON TABLE WELLS_WATERSHED_CODES IS 'Watershed where the well is located.'
;
CREATE TABLE WELLS_WELL_LICENCE 
(
  WELL_LICENCE_ID VARCHAR(10) NOT NULL 
, AUTHORIZATION_NUMBER VARCHAR(12) NOT NULL 
, WELL_TAG_NUMBER DECIMAL(20, 0) NOT NULL 
, AUTHORIZATION_STATUS_DATE TIMESTAMP(0) NOT NULL 
, AUTHORIZATION_STATUS VARCHAR(30) NOT NULL 
, WHEN_CREATED TIMESTAMP(0) NOT NULL 
, WHO_CREATED VARCHAR(30) NOT NULL 
, WHEN_UPDATED TIMESTAMP(0) 
, WHO_UPDATED VARCHAR(30) 
, CONSTRAINT WELL_LCNC_PK PRIMARY KEY 
  (
    WELL_LICENCE_ID 
  )
) ;
COMMENT ON TABLE WELLS_WELLS IS 'Detail description of the well (location, owner, elevation, etc.)Water well records are the most important groundwater data collected. A typical well record contains owner, driller, and location information, and information on construction, water levels, lithology, well capacity, pumping test data, water quality, and intended use of the well. While legal descriptions for the database are preferred for well locations, alternative location descriptors such as latitude and longitude, UTM coordinates or a location sketch on a 1:50:000 or better scale map are also acceptable.'
;